{"version":3,"file":"index-3ddc6b37.js","sources":["../../src/views/Onboarding.vue","../../node_modules/mdurl/lib/decode.mjs","../../node_modules/mdurl/lib/encode.mjs","../../node_modules/mdurl/lib/format.mjs","../../node_modules/mdurl/lib/parse.mjs","../../node_modules/uc.micro/properties/Any/regex.mjs","../../node_modules/uc.micro/categories/Cc/regex.mjs","../../node_modules/uc.micro/categories/P/regex.mjs","../../node_modules/uc.micro/categories/S/regex.mjs","../../node_modules/uc.micro/categories/Z/regex.mjs","../../node_modules/uc.micro/categories/Cf/regex.mjs","../../node_modules/entities/lib/esm/generated/decode-data-html.js","../../node_modules/entities/lib/esm/generated/decode-data-xml.js","../../node_modules/entities/lib/esm/decode_codepoint.js","../../node_modules/entities/lib/esm/decode.js","../../node_modules/markdown-it/lib/common/utils.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_label.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_title.mjs","../../node_modules/markdown-it/lib/renderer.mjs","../../node_modules/markdown-it/lib/ruler.mjs","../../node_modules/markdown-it/lib/token.mjs","../../node_modules/markdown-it/lib/rules_core/state_core.mjs","../../node_modules/markdown-it/lib/rules_core/normalize.mjs","../../node_modules/markdown-it/lib/rules_core/linkify.mjs","../../node_modules/markdown-it/lib/rules_core/replacements.mjs","../../node_modules/markdown-it/lib/rules_core/smartquotes.mjs","../../node_modules/markdown-it/lib/parser_core.mjs","../../node_modules/markdown-it/lib/rules_core/block.mjs","../../node_modules/markdown-it/lib/rules_core/inline.mjs","../../node_modules/markdown-it/lib/rules_core/text_join.mjs","../../node_modules/markdown-it/lib/rules_block/state_block.mjs","../../node_modules/markdown-it/lib/rules_block/table.mjs","../../node_modules/markdown-it/lib/rules_block/list.mjs","../../node_modules/markdown-it/lib/common/html_blocks.mjs","../../node_modules/markdown-it/lib/common/html_re.mjs","../../node_modules/markdown-it/lib/rules_block/html_block.mjs","../../node_modules/markdown-it/lib/parser_block.mjs","../../node_modules/markdown-it/lib/rules_block/code.mjs","../../node_modules/markdown-it/lib/rules_block/fence.mjs","../../node_modules/markdown-it/lib/rules_block/blockquote.mjs","../../node_modules/markdown-it/lib/rules_block/hr.mjs","../../node_modules/markdown-it/lib/rules_block/reference.mjs","../../node_modules/markdown-it/lib/rules_block/heading.mjs","../../node_modules/markdown-it/lib/rules_block/lheading.mjs","../../node_modules/markdown-it/lib/rules_block/paragraph.mjs","../../node_modules/markdown-it/lib/rules_inline/state_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/text.mjs","../../node_modules/markdown-it/lib/rules_inline/linkify.mjs","../../node_modules/markdown-it/lib/rules_inline/escape.mjs","../../node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","../../node_modules/markdown-it/lib/rules_inline/emphasis.mjs","../../node_modules/markdown-it/lib/rules_inline/autolink.mjs","../../node_modules/markdown-it/lib/rules_inline/entity.mjs","../../node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","../../node_modules/markdown-it/lib/parser_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/newline.mjs","../../node_modules/markdown-it/lib/rules_inline/backticks.mjs","../../node_modules/markdown-it/lib/rules_inline/link.mjs","../../node_modules/markdown-it/lib/rules_inline/image.mjs","../../node_modules/markdown-it/lib/rules_inline/html_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","../../node_modules/linkify-it/index.mjs","../../node_modules/linkify-it/lib/re.mjs","../../node_modules/punycode.js/punycode.es6.js","../../node_modules/markdown-it/lib/index.mjs","../../node_modules/markdown-it/lib/presets/default.mjs","../../node_modules/markdown-it/lib/presets/zero.mjs","../../node_modules/markdown-it/lib/presets/commonmark.mjs","../../src/assets/images/生活.svg","../../src/assets/images/yqmfs.png","../../src/router/index.js","../../src/views/Chat.vue","../../src/assets/images/社交.svg","../../src/assets/images/工作.svg","../../src/assets/images/send_select.svg","../../src/assets/images/send_normal.svg","../../src/views/Self.vue","../../src/assets/images/bottle.png","../../src/assets/images/cd.webp","../../src/main.js"],"sourcesContent":["<template>\n  <div class=\"onboarding\">\n    <div class=\"header-container\">\n      <div class=\"left-content\">\n        <h1>Ego</h1>\n        <div class=\"slogan\">每个自我，都是未完成的拼图<br>第 <span class=\"number-container\">\n          <span class=\"number\" :key=\"randomNumber\">{{ randomNumber }}</span>\n        </span> 个人格生成中...</div>\n      </div>\n      <div class=\"grid-container\">\n        <div \n          class=\"grid-item\" \n          v-for=\"i in 4\" \n          :key=\"i\"\n          :class=\"{\n            'active': i === currentStep + 1,\n            'completed': i < currentStep + 1\n          }\"\n        >\n          <div class=\"shape-container\">\n            <div :class=\"['shape', shapes[i-1]]\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"onboarding-content\">\n      <!-- 问题卡片 -->\n      <div class=\"question-card\" v-if=\"currentStep < questions.length\">\n        <h2 class=\"question-title\">\n          <div class=\"dots-container\">\n            <div \n              class=\"dot\" \n              v-for=\"i in questions.length\" \n              :key=\"i\"\n              :class=\"{\n                'completed': i < currentStep + 1,\n                'active': i === currentStep + 1\n              }\"\n            ></div>\n          </div>\n          <div style=\"display: flex; align-items: center; justify-content: center;\">\n            <span class=\"title-text\">{{ questions[currentStep].title }}</span>\n            <span v-if=\"questions[currentStep].multiple\" class=\"multiple-tag\">(多选)</span>\n          </div>\n        </h2>\n        \n        <!-- 单选题 -->\n        <div v-if=\"!questions[currentStep].multiple\" class=\"options-list\">\n          <div \n            v-for=\"option in questions[currentStep].options\" \n            :key=\"option.value\"\n            class=\"option-item\"\n            :class=\"{ selected: selectedAnswers[currentStep] === option.value }\"\n            @click=\"selectAnswer(option.value)\"\n          >\n            {{ option.label }}\n          </div>\n        </div>\n        \n        <!-- 多选题 -->\n        <div v-else class=\"options-list\">\n          <div \n            v-for=\"option in questions[currentStep].options\" \n            :key=\"option.value\"\n            class=\"option-item\"\n            :class=\"{ selected: selectedAnswers[currentStep]?.includes(option.value) }\"\n            @click=\"toggleMultiAnswer(option.value)\"\n          >\n            {{ option.label }}\n          </div>\n        </div>\n      </div>\n      \n      <!-- 结果页面 -->\n      <div v-else class=\"result-card\">\n        <div class=\"personality-card\" :class=\"personalityClass\">\n          <h2>你的初始人格是</h2>\n          <div class=\"personality-name\">{{ personalityResult.name }}</div>\n          <div class=\"personality-traits\">\n            <div v-for=\"trait in personalityResult.traits\" :key=\"trait\" class=\"trait-tag\">\n              {{ trait }}\n            </div>\n          </div>\n          <button class=\"start-button\" @click=\"startChat\">开始对话</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 导航按钮 -->\n    <div class=\"navigation-buttons\">\n      <div v-if=\"currentStep > 0\" class=\"prev-text-button\" @click=\"prevStep\">\n        上一题\n      </div>\n      <button \n        class=\"nav-button next\" \n        @click=\"handleNextStep\"\n        :disabled=\"!canProceed\"\n      >\n        <span>{{ currentStep === questions.length - 1 ? '开始收集' : '下一题' }}</span>\n      </button>\n    </div>\n\n    <!-- 人格角色弹窗 -->\n    <div class=\"personality-modal\" v-if=\"showPersonalityModal\">\n      <div class=\"modal-overlay\" @click=\"closeModal\"></div>\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h3>你的初始人格是</h3>\n          <button class=\"close-button\" @click=\"closeModal\">×</button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"personality-name\">{{ personalityResult.name }}</div>\n          <div class=\"personality-traits\">\n            <div v-for=\"trait in personalityResult.traits\" :key=\"trait\" class=\"trait-tag\">\n              {{ trait }}\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"start-button\" @click=\"startChat\">开始对话</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\nconst currentStep = ref(0)\nconst selectedAnswers = ref({})\nconst randomNumber = ref(123)\nconst shapes = ref([])\nconst showPersonalityModal = ref(false)\n\nonMounted(() => {\n  console.log('Onboarding 组件已挂载')\n  // 生成1000-9999之间的随机数\n  randomNumber.value = Math.floor(Math.random() * 9000) + 1000\n  // 生成4个交替的图形\n  const shapeTypes = ['spade', 'heart', 'club', 'diamond']\n  const grid = Array(4).fill(null)\n  for (let i = 0; i < 4; i++) {\n    grid[i] = shapeTypes[i % 4]\n  }\n  shapes.value = grid\n})\n\nconst questions = [\n\n\n  {\n    title: '🌌 你更易被哪种世界观治愈？',\n    options: [\n      { label: '赛博朋克都市', value: 'A' },\n      { label: '魔法森林', value: 'B' },\n      { label: '宇宙航行', value: 'C' },\n      { label: '童话王国', value: 'D' }\n    ]\n  },\n\n\n  {\n    title: '🤖 现在你的身体感觉更像？',\n    options: [\n      { label: '电力耗尽的机器人', value: 'A' },\n      { label: '随风飘摇的树叶', value: 'B' },\n      { label: '即将喷发的火山', value: 'C' },\n      { label: '闪烁的星尘', value: 'D' }\n    ]\n  },\n  {\n    title: '🌊 近让你情绪波动的事件通常发生在？',\n    multiple: true,\n    options: [\n      { label: '工作/学习场景', value: 'A' },\n      { label: '家庭关系', value: 'B' },\n      { label: '社交互动', value: 'C' },\n      { label: '自我成长', value: 'D' },\n      { label: '随机日常', value: 'E' }\n    ]\n  },\n  {\n    title: '🌟 你希望树洞守护者用哪种方式回应？',\n    options: [\n      { label: '毒舌但治愈的吐槽', value: 'A' },\n      { label: '充满想象力的故事', value: 'B' },\n      { label: '温柔肯定的鼓励', value: 'C' },\n      { label: '提供解决攻略', value: 'D' }\n    ]\n  }\n]\n\n// 根据答案计算人格类型\nconst personalityResult = computed(() => {\n  const answers = selectedAnswers.value\n  // 这里可以根据答案组合返回不同的人格类型\n  const personalities = [\n    {\n      name: '毒舌暖男',\n      traits: ['机智幽默', '一针见血', '内心柔软'],\n      class: 'personality-warm'\n    },\n    {\n      name: '佛系捧场王',\n      traits: ['随和包容', '善解人意', '佛系心态'],\n      class: 'personality-peace'\n    },\n    {\n      name: '高冷梗王',\n      traits: ['冷面笑匠', '语出惊人', '反差萌'],\n      class: 'personality-cool'\n    }\n  ]\n  \n  // 简单算法：根据第一题和最后一题的答案选择人格\n  const firstAnswer = answers[0]\n  const lastAnswer = answers[3]\n  const index = (firstAnswer?.charCodeAt(0) || 0 + lastAnswer?.charCodeAt(0) || 0) % personalities.length\n  return personalities[index]\n})\n\nconst personalityClass = computed(() => personalityResult.value?.class || '')\n\nconst canProceed = computed(() => {\n  const currentQuestion = questions[currentStep.value]\n  if (!currentQuestion) return true\n  \n  const answer = selectedAnswers.value[currentStep.value]\n  if (currentQuestion.multiple) {\n    // 第5题和第8题需要选择3个选项\n    return answer && answer.length === 3\n  }\n  return !!answer\n})\n\nconst selectAnswer = (value) => {\n  selectedAnswers.value[currentStep.value] = value\n  console.log('选择答案:', value)\n  \n  // 检查是否可以进入下一题\n  if (canProceed.value && currentStep.value < questions.length - 1) {\n    // 如果不是最后一题，延迟一小段时间后自动进入下一题\n    setTimeout(() => {\n      handleNextStep()\n    }, 300)\n  }\n}\n\nconst toggleMultiAnswer = (value) => {\n  if (!selectedAnswers.value[currentStep.value]) {\n    selectedAnswers.value[currentStep.value] = []\n  }\n  \n  const index = selectedAnswers.value[currentStep.value].indexOf(value)\n  if (index === -1) {\n    // 第5题和第8题最多只能选择3个选项\n    if (selectedAnswers.value[currentStep.value].length < 3) {\n      selectedAnswers.value[currentStep.value].push(value)\n    }\n  } else {\n    selectedAnswers.value[currentStep.value].splice(index, 1)\n  }\n  console.log('多选答案:', selectedAnswers.value[currentStep.value])\n  \n  // 检查是否可以进入下一题\n  if (canProceed.value) {\n    // 延迟一小段时间后自动进入下一题，让用户能看到选择效果\n    setTimeout(() => {\n      handleNextStep()\n    }, 300)\n  }\n}\n\nconst nextStep = () => {\n  if (currentStep.value < questions.length - 1) {\n    currentStep.value++\n    console.log('下一步:', currentStep.value)\n  }\n}\n\nconst prevStep = () => {\n  if (currentStep.value > 0) {\n    currentStep.value--\n    console.log('上一步:', currentStep.value)\n  }\n}\n\nconst handleNextStep = () => {\n  if (currentStep.value === questions.length - 1) {\n    // 如果是最后一题，直接跳转到会话页面\n    startChat()\n  } else {\n    // 否则进入下一题\n    nextStep()\n  }\n}\n\nconst closeModal = () => {\n  showPersonalityModal.value = false\n}\n\nconst startChat = () => {\n  // 保存用户答案和人格类型\n  localStorage.setItem('onboardingAnswers', JSON.stringify(selectedAnswers.value))\n  localStorage.setItem('personalityType', JSON.stringify(personalityResult.value))\n  console.log('开始对话')\n  router.push('/chat')\n}\n</script>\n\n<style scoped>\n/* 移动端适配 */\n@media screen and (max-width: 375px) {\n  .onboarding {\n    width: 100%;\n    margin: 0;\n    padding: 28px 0 0 0;\n  }\n\n  .header-container {\n    width: 100%;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 0 24px;\n  }\n\n  .left-content {\n    width: 100%;\n  }\n\n  .grid-container {\n    width: 72px;\n    height: 72px;\n    margin-top: 0px;\n    margin-left: auto;\n  }\n\n  .navigation-buttons {\n    width: 100%;\n    left: 0;\n    transform: none;\n    padding: 0;\n  }\n\n  .onboarding-content {\n    border-radius: 20px 20px 0 0;\n    margin-top: 20px;\n  }\n}\n\n/* 桌面端居中显示 */\n@media screen and (min-width: 376px) {\n  .onboarding {\n    width: 375px;\n    margin: 0 auto;\n    padding: 28px 0 0 0;\n  }\n\n  .header-container {\n    width: 100%;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n    padding: 0 24px;\n  }\n\n  .left-content {\n    flex: 1;\n  }\n\n  .grid-container {\n    width: 72px;\n    height: 72px;\n    margin-left: 20px;\n  }\n\n  .navigation-buttons {\n    width: 375px;\n    left: 50%;\n    transform: translateX(-50%);\n    padding: 0;\n  }\n\n  .onboarding-content {\n    border-radius: 20px 20px 0 0;\n    margin-top: 20px;\n  }\n}\n\n.onboarding {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: linear-gradient(135deg, #F8FBFF 0%, #E6FBFA 100%);\n  background-size: 100% 50vh;\n  background-repeat: no-repeat;\n  position: relative;\n  box-sizing: border-box;\n}\n\n.header-container {\n  display: flex;\n  width: 100%;\n  margin-bottom: 40px;\n  box-sizing: border-box;\n  justify-content: space-between;\n  align-items: flex-start;\n  flex-direction: row;\n}\n\n.left-content {\n  display: flex;\n  flex-direction: column;\n  width: 65%;\n  position: relative;\n  padding-right: 20px;\n  align-items: flex-start;\n}\n\nh1 {\n  font-size: 24px;\n  font-weight: 900;\n  margin-bottom: 12px;\n  color: #111;\n  align-self: flex-start;\n  transform: skew(-5deg);\n  display: inline-block;\n  font-family: 'Avenir', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n.ego-subtitle {\n  font-size: 14px;\n  color: #111;\n  margin-left: 4px;\n  font-weight: normal;\n}\n\n.slogan {\n  font-size: 14px;\n  color: #888;\n  margin-bottom: 0;\n  text-align: left;\n  align-self: flex-start;\n}\n\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  gap: 4px;\n  width: 76px;\n  height: 76px;\n  aspect-ratio: 1 / 1;\n  border-radius: 12px;\n  padding: 4px;\n  box-sizing: border-box;\n  position: relative;\n  margin-left: 20px;\n  transform-style: preserve-3d;\n  perspective: 1000px;\n  transform: rotateX(0deg) rotateY(0deg);\n}\n\n.grid-item {\n  background-color: white;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  opacity: 0.5;\n  transform-style: preserve-3d;\n  border: none;\n}\n\n.grid-item.active {\n  opacity: 1;\n  background-color: #e6fbfa;\n  transform: translateZ(5px);\n  box-shadow: 0 0 15px rgba(31, 234, 187, 0.2);\n  border: none;\n}\n\n.grid-item.completed {\n  opacity: 1;\n  background-color: #54F3D7;\n  transform: translateZ(2px);\n  box-shadow: 0 0 8px rgba(84, 243, 215, 0.15), 0 0 12px rgba(84, 243, 215, 0.05);\n  border: none;\n}\n\n.grid-item::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.1) 100%);\n}\n\n.grid-item:hover {\n  transform: translateZ(8px) scale(1.05);\n  z-index: 1;\n  box-shadow: 0 0 12px rgba(31, 234, 187, 0.15), 0 0 20px rgba(31, 234, 187, 0.05);\n  background-color: rgba(255, 255, 255, 0.9);\n  border: none;\n}\n\n.grid-item.completed:hover {\n  transform: none;\n  box-shadow: none;\n  background-color: #54F3D7;\n  border: none;\n}\n\n.grid-item:hover::before {\n  background: linear-gradient(135deg, rgba(255,255,255,0.6) 0%, rgba(255,255,255,0.3) 100%);\n  border: none;\n}\n\n.grid-item.completed:hover::before {\n  background: linear-gradient(135deg, rgba(84, 243, 215, 0.4) 0%, rgba(84, 243, 215, 0.1) 100%);\n}\n\n.grid-item:hover::after {\n  background: linear-gradient(45deg, rgba(255,255,255,0.3), rgba(255,255,255,0.5));\n}\n\n/* 添加魔方边框效果 */\n.grid-container::after {\n  content: '';\n  position: absolute;\n  top: -2px;\n  left: -2px;\n  right: -2px;\n  bottom: -2px;\n  border: 2px solid rgba(255,255,255,0.3);\n  border-radius: 10px;\n  pointer-events: none;\n  box-shadow: 0 0 12px rgba(31, 234, 187, 0.2), 0 0 24px rgba(31, 234, 187, 0.08);\n}\n\n/* 添加魔方侧面效果 */\n.grid-item::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(255,255,255,0.3));\n  border-radius: 4px;\n  pointer-events: none;\n}\n\n/* 添加魔方高光效果 */\n.grid-item.active::before {\n  background: linear-gradient(135deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.1) 100%);\n}\n\n.grid-item.completed::before {\n  background: linear-gradient(135deg, rgba(84, 243, 215, 0.4) 0%, rgba(84, 243, 215, 0.1) 100%);\n}\n\n.onboarding-content {\n  width: 100%;\n  margin: 0;\n  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.4) 0%, rgba(255, 255, 255) 15%);\n  border-radius: 20px 20px 0 0;\n  box-shadow: 0 12px 30px rgba(31, 234, 187, 0.15), 0 8px 20px rgba(31, 234, 187, 0.1);\n  padding: 0 0 12px 0;\n  position: relative;\n  box-sizing: border-box;\n  flex: 1;\n  margin-top: auto;\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border: 1.2px solid #fff;\n  min-height: 60vh;\n  transform: translate3d(0, 0, 0);\n  will-change: transform;\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n  perspective: 1000;\n  -webkit-perspective: 1000;\n}\n\n.onboarding-content::after {\n  content: '';\n  position: absolute;\n  bottom: 53px;\n  left: 0;\n  right: 0;\n  height: 160px;\n  background-image: none;\n  background-size: 100% auto;\n  background-position: center bottom;\n  background-repeat: no-repeat;\n  opacity: 0.8;\n  z-index: 0;\n  pointer-events: none;\n}\n\n.question-card, .result-card {\n  position: relative;\n  z-index: 1;\n  padding: 28px 24px;\n}\n\n.question-card {\n  padding: 0;\n  margin-bottom: 24px;\n  transform: translateZ(0);\n  will-change: transform;\n}\n\n.question-title {\n  font-size: 17px;\n  font-weight: 600;\n  color: #111;\n  margin: 12px 0 24px 0;\n  text-align: center;\n  padding: 0 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.title-text {\n  display: inline-block;\n  vertical-align: middle;\n  text-align: center;\n}\n\n.multiple-tag {\n  font-size: 14px;\n  color: #888;\n  font-weight: normal;\n  margin-left: 4px;\n  display: inline-flex;\n  align-items: center;\n  line-height: 1;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.dots-container {\n  display: flex;\n  gap: 3px;\n  margin-top: 0;\n  margin-bottom: 20px;\n  justify-content: center;\n}\n\n.dot {\n  width: 3px;\n  height: 3px;\n  background-color: rgba(17, 25, 37, 0.15);\n  border-radius: 1px;\n  transition: all 0.3s ease;\n}\n\n.dot.completed {\n  background-color: #1FEABB;\n  width: 3px;\n  height: 3px;\n}\n\n.dot.active {\n  background-color: rgba(17, 25, 37, 0.45);\n  width: 3px;\n  height: 3px;\n}\n\n.options-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 30px;\n  padding: 0 16px;\n  transform: translate3d(0, 0, 0);\n  will-change: transform;\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n  perspective: 1000;\n  -webkit-perspective: 1000;\n}\n\n.option-item {\n  height: 48px;\n  padding: 0 20px;\n  background-color: #fff;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: 1px solid #eee;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  color: #555;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  user-select: none;\n}\n\n.option-item:active {\n  transform: scale(0.98);\n  outline: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.option-item.selected {\n  color: #111;\n  border: 1.5px solid #54F3D7;\n  background-color: rgba(84, 243, 215, 0.1);\n  font-weight: 500;\n}\n\n.option-item.multiple-selected {\n  color: #111;\n  border: 1.5px solid #54F3D7;\n  background-color: rgba(84, 243, 215, 0.1);\n  font-weight: 500;\n}\n\n.result-card {\n  text-align: center;\n  padding: 40px 20px;\n}\n\n.personality-card {\n  padding: 30px;\n  border-radius: 20px;\n  background: white;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n}\n\n.personality-name {\n  font-size: 28px;\n  font-weight: bold;\n  margin: 20px 0;\n  color: #1FEABB;\n}\n\n.personality-traits {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  margin: 20px 0;\n}\n\n.trait-tag {\n  padding: 8px 16px;\n  background-color: #e6fbfa;\n  color: #1FEABB;\n  border-radius: 20px;\n  font-size: 14px;\n}\n\n.start-button {\n  margin-top: 30px;\n  padding: 15px 40px;\n  background-color: #1FEABB;\n  color: #111;\n  border: none;\n  border-radius: 25px;\n  font-size: 18px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.start-button:hover {\n  background-color: #1ad5a8;\n  transform: translateY(-2px);\n}\n\n/* 人格卡片样式 */\n.personality-warm {\n  background: linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%);\n}\n\n.personality-peace {\n  background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);\n}\n\n.personality-cool {\n  background: linear-gradient(135deg, #d4fc79 0%, #96e6a1 100%);\n}\n\n.navigation-buttons {\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  width: 375px;\n  background: transparent;\n  box-sizing: border-box;\n  z-index: 2;\n  isolation: isolate;\n  padding-bottom: env(safe-area-inset-bottom, 20px);\n}\n\n.prev-text-button {\n  font-size: 14px;\n  color: #999;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  padding: 4px 0;\n  text-align: center;\n  width: 100%;\n  margin-left: 2px;\n  outline: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.prev-text-button:active {\n  color: #555;\n}\n\n.nav-button.next {\n  background: #54F3D7;\n  color: #111;\n  box-shadow: 0 2px 8px rgba(84, 243, 215, 0.3);\n  margin: 0 auto;\n  position: relative;\n  overflow: hidden;\n  border: none;\n  outline: none;\n  isolation: isolate;\n  backdrop-filter: none;\n  -webkit-backdrop-filter: none;\n  padding: 12px 30px;\n  border-radius: 999px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  width: 88%;\n  max-width: none;\n  margin-bottom: env(safe-area-inset-bottom, 20px);\n  -webkit-tap-highlight-color: transparent;\n}\n\n.nav-button.next:disabled {\n  background: rgba(84, 243, 215, 0.35);\n  color: rgba(17, 17, 17, 0.35);\n  box-shadow: none;\n  cursor: not-allowed;\n}\n\n.nav-button.prev {\n  background: #f5f5f5;\n  color: #111;\n  border: 1px solid #ddd;\n  display: none;\n}\n\n.number-container {\n  display: inline-block;\n  position: relative;\n  height: 20px;\n  overflow: hidden;\n  vertical-align: middle;\n}\n\n.number {\n  font-family: 'Avenir', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  font-weight: 600;\n  color: #111;\n  display: block;\n  animation: numberFlip 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);\n}\n\n@keyframes numberFlip {\n  0% {\n    transform: translateY(100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n.shape-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 1;\n}\n\n.shape {\n  width: 14px;\n  height: 14px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 12px;\n  color: #B2FFED;\n  opacity: 1;\n}\n\n.shape.spade::before {\n  content: '♠';\n  font-size: 18px;\n}\n\n.shape.heart::before {\n  content: '♥';\n  font-size: 18px;\n}\n\n.shape.club::before {\n  content: '♣';\n  font-size: 18px;\n}\n\n.shape.diamond::before {\n  content: '♦';\n  font-size: 18px;\n}\n\n.grid-item.active .shape {\n  color: #B2FFED;\n  opacity: 1;\n}\n\n.grid-item.completed .shape {\n  color: #fff;\n  opacity: 1;\n}\n\n/* 弹窗样式 */\n.personality-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: transparent;\n  backdrop-filter: none;\n  -webkit-backdrop-filter: none;\n  width: 100vw;\n  height: 100vh;\n}\n\n.modal-content {\n  position: relative;\n  width: 90%;\n  max-width: 320px;\n  max-height: 90vh;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  z-index: 1001;\n  overflow: hidden;\n  animation: modalFadeIn 0.3s ease;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-header {\n  padding: 20px;\n  text-align: center;\n  position: relative;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.modal-header h3 {\n  font-size: 18px;\n  font-weight: 600;\n  color: #111;\n  margin: 0;\n}\n\n.close-button {\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  background: none;\n  border: none;\n  font-size: 24px;\n  color: #999;\n  cursor: pointer;\n  padding: 0;\n  line-height: 1;\n}\n\n.modal-body {\n  padding: 24px 20px;\n  text-align: center;\n  overflow-y: auto;\n  flex: 1;\n}\n\n.modal-body .personality-name {\n  font-size: 24px;\n  font-weight: 700;\n  color: #1FEABB;\n  margin-bottom: 16px;\n}\n\n.modal-body .personality-traits {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  justify-content: center;\n  margin: 0 auto;\n  max-width: 280px;\n}\n\n.modal-body .trait-tag {\n  padding: 6px 12px;\n  background-color: rgba(31, 234, 187, 0.1);\n  color: #1FEABB;\n  border-radius: 16px;\n  font-size: 14px;\n}\n\n.modal-footer {\n  padding: 20px;\n  text-align: center;\n  border-top: 1px solid #f0f0f0;\n}\n\n.modal-footer .start-button {\n  width: 100%;\n  padding: 12px 0;\n  background-color: #1FEABB;\n  color: #111;\n  border: none;\n  border-radius: 12px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.modal-footer .start-button:active {\n  transform: scale(0.98);\n}\n\n@keyframes modalFadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.option-item.multiple-selected {\n  background: rgba(84, 243, 215, 0.1);\n  border-color: #54F3D7;\n}\n\n.option-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n\n.multiple-tag {\n  font-size: 12px;\n  color: rgba(17, 25, 37, 0.45);\n}\n\n.character-avatar {\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-bottom: 12px;\n}\n\n.character-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: #111;\n  margin-bottom: 8px;\n}\n\n.character-desc {\n  font-size: 12px;\n  color: #666;\n  line-height: 1.5;\n  text-align: center;\n  max-width: 200px;\n}\n\n.grid-item.completed .shape-container {\n  background: #B2FFED;\n}\n\n.message.user {\n  align-items: flex-end;\n  margin-bottom: 16px;\n}\n\n.comfort-section {\n  background: linear-gradient(to bottom, rgba(17,17,17,0.03) 0%, rgba(17,17,17,0) 100%);\n}\n</style> ","/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","export default \"__VITE_ASSET__421a9939__\"","export default \"__VITE_ASSET__26aaa628__\"","import { createRouter, createWebHashHistory } from 'vue-router'\n// 直接导入组件，不使用懒加载\nimport Onboarding from '../views/Onboarding.vue'\nimport Chat from '../views/Chat.vue'\nimport Self from '../views/Self.vue'\n\nconst routes = [\n  {\n    path: '/',\n    redirect: '/onboarding'\n  },\n  {\n    path: '/onboarding',\n    name: 'Onboarding',\n    component: Onboarding\n  },\n  {\n    path: '/chat',\n    name: 'Chat',\n    component: Chat\n  },\n  {\n    path: '/self',\n    name: 'self',\n    component: Self\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(import.meta.env.BASE_URL),\n  routes\n})\n\nexport default router ","<script setup>\nimport { ref, onMounted, nextTick, watch, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport MarkdownIt from 'markdown-it'\nimport lifeIcon from '../assets/images/生活.svg'\nimport socialIcon from '../assets/images/社交.svg'\nimport workIcon from '../assets/images/工作.svg'\nimport yqmfsAvatar from '../assets/images/yqmfs.png'\nimport sendSelectIcon from '../assets/images/send_select.svg'\nimport sendNormalIcon from '../assets/images/send_normal.svg'\n\nconst router = useRouter()\nconst activeTab = ref('chat')\nconst selectedScenario = ref('life') // 默认选中生活场景\n\nconst scenarios = [\n  { id: 'life', name: '生活琐事', icon: lifeIcon },\n  { id: 'social', name: '人际交往', icon: socialIcon },\n  { id: 'work', name: '工作日常', icon: workIcon }\n]\n\nconst switchTab = (tab) => {\n  activeTab.value = tab\n  if (tab === 'self') {\n    router.push('/self')\n  }\n}\n\nconst getTimeBasedMessage = (scenario) => {\n  return ''\n}\n\nconst messages = ref([])\nconst newMessage = ref('')\nconst messagesContainer = ref(null)\nconst showPanel = ref(false)\nconst isThinking = ref(false)\nconst currentStream = ref(null)\nconst personalityResult = ref({\n  name: '元气魔法师',\n  description: '聚会时用幽默打破沉默，拉近关系',\n  avatar: yqmfsAvatar,\n  traits: ['聚会能量', '社交魔法', '幽默化解', '亲密关系']\n})\nconst userAnswers = ref(null)\n\n// 特质标签权重映射表\nconst traitWeights = {\n  '✨ 社交达人': { base: 1.0, factors: ['1A', '4B', '8A'] },\n  '🌟 独处专家': { base: 1.0, factors: ['1B', '3B', '7A'] },\n  '🎯 目标导向': { base: 1.0, factors: ['2A', '5B', '7B', '8D', '9C'] },\n  '🎨 创意无限': { base: 1.0, factors: ['2B', '5D', '8B'] },\n  '💬 表达大师': { base: 1.0, factors: ['3A', '4A', '8A'] },\n  '🎭 情绪管理': { base: 1.0, factors: ['3B', '7A', '9B'] },\n  '🤔 深度思考': { base: 1.0, factors: ['3C', '7C', '9B'] },\n  '😊 表情包达人': { base: 1.0, factors: ['4A', '6A'] },\n  '📱 社交达人': { base: 1.0, factors: ['4B', '8A'] },\n  '🎮 游戏玩家': { base: 1.0, factors: ['4C', '6B'] },\n  '📊 数据分析': { base: 1.0, factors: ['5A', '8A'] },\n  '🤝 团队协作': { base: 1.0, factors: ['5C', '8C'] },\n  '💪 能量满满': { base: 1.0, factors: ['6A', '8A'] },\n  '🌙 夜猫子': { base: 1.0, factors: ['6B', '7A'] },\n  '☀️ 早起鸟': { base: 1.0, factors: ['6C', '7B'] },\n  '🎭 角色扮演': { base: 1.0, factors: ['7A', '8B'] },\n  '💼 职场达人': { base: 1.0, factors: ['8A', '9C'] },\n  '😊 乐观向上': { base: 1.0, factors: ['9A', '6A'] }\n}\n\n// 特质标签更新历史\nconst traitHistory = ref([])\n\n// 计算特质标签权重\nconst calculateTraitWeight = (trait, answers) => {\n  let weight = traitWeights[trait].base\n  traitWeights[trait].factors.forEach(factor => {\n    const [question, answer] = factor.split('')\n    if (answers[question] === answer) {\n      weight += 0.5 // 每个匹配因素增加0.5权重\n    }\n  })\n  return weight\n}\n\n// 生成特质标签\nconst generateTraits = (answers) => {\n  const traitScores = {}\n  \n  // 计算每个特质的得分\n  Object.keys(traitWeights).forEach(trait => {\n    traitScores[trait] = calculateTraitWeight(trait, answers)\n  })\n  \n  // 按得分排序并获取前3个特质\n  const topTraits = Object.entries(traitScores)\n    .sort(([, a], [, b]) => b - a)\n    .slice(0, 3)\n    .map(([trait]) => trait)\n  \n  // 记录特质更新历史\n  traitHistory.value.push({\n    timestamp: new Date().toISOString(),\n    traits: topTraits,\n    scores: traitScores\n  })\n  \n  // 如果历史记录超过10条，保留最新的10条\n  if (traitHistory.value.length > 10) {\n    traitHistory.value = traitHistory.value.slice(-10)\n  }\n  \n  return topTraits\n}\n\n// 动态更新特质标签\nconst updateTraits = (newAnswers) => {\n  const currentTraits = personalityResult.value.traits\n  const newTraits = generateTraits(newAnswers)\n  \n  // 计算特质变化\n  const addedTraits = newTraits.filter(trait => !currentTraits.includes(trait))\n  const removedTraits = currentTraits.filter(trait => !newTraits.includes(trait))\n  \n  // 如果有变化，更新特质\n  if (addedTraits.length > 0 || removedTraits.length > 0) {\n    personalityResult.value.traits = newTraits\n  }\n}\n\n// 监听用户答案变化\nwatch(userAnswers, (newAnswers) => {\n  if (newAnswers && Object.keys(newAnswers).length > 0) {\n    updateTraits(newAnswers)\n  }\n}, { deep: true })\n\nconst scrollToBottom = async () => {\n  await nextTick()\n  if (messagesContainer.value) {\n    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight\n  }\n}\n\nconst showThinking = ref(true)\n\nconst thinkingMessage = computed(() => messages.value.find(m => m.type === 'thinking'))\n\nconst inputActive = computed(() => !!newMessage.value.trim())\n\nconst md = new MarkdownIt()\n\nconst pureThinking = computed(() => {\n  if (!thinkingMessage.value || !thinkingMessage.value.content) return ''\n  const raw = thinkingMessage.value.content.split('【最终结论】')[0]\n  return md.render(raw)\n})\n\nconst finalConclusion = (content) => {\n  if (!content) return ''\n  const idx = content.indexOf('【最终结论】')\n  return idx !== -1 ? md.render(content.slice(idx)) : ''\n}\n\n// 情感分析结果类型\nconst EmotionType = {\n  // 正向情绪\n  HAPPY: 'happy',        // 快乐/喜悦\n  EXCITED: 'excited',    // 兴奋/自豪\n  LOVE: 'love',          // 爱/感情\n  GRATEFUL: 'grateful',  // 感激\n  PEACEFUL: 'peaceful',  // 宁静\n  HOPEFUL: 'hopeful',    // 希望\n  \n  // 负向情绪\n  SAD: 'sad',            // 悲伤\n  ANGRY: 'angry',        // 愤怒\n  ANXIOUS: 'anxious',    // 焦虑/紧张\n  SHAME: 'shame',        // 羞耻\n  FEAR: 'fear',          // 恐惧\n  DISGUST: 'disgust',    // 厌恶\n  \n  // 中性情绪\n  NEUTRAL: 'neutral'     // 平静/中性\n}\n\n// 场景关键词定义\nconst scenarioKeywords = {\n  conflict: ['冲突', '争吵', '吵架', '打架', '骂', '生气', '不满', '不爽', '不开心', '讨厌'],\n  progress: ['进步', '成长', '进展', '完成', '达成', '实现', '目标', '成就', '成功'],\n  pet: ['猫', '狗', '宠物', '小动物', '喵', '汪'],\n  work: ['工作', '上班', '公司', '同事', '老板', '项目', '任务'],\n  study: ['学习', '功课', '作业', '考试', '论文', '上课', '学校', '大学', '高中', '初中'],\n  entertainment: ['电影', '音乐', '游戏', '演唱会', '电视', '剧', '综艺', '明星', '艺人']\n}\n\n// 情绪颜色映射\nconst emotionColorMap = {\n  // 正向情绪\n  [EmotionType.HAPPY]: {\n    color: '#FFD700',\n    label: '快乐',\n    shadow: '0 0 15px rgba(255, 215, 0, 0.6)'\n  },\n  [EmotionType.EXCITED]: {\n    color: '#FF9800',\n    label: '兴奋',\n    shadow: '0 0 15px rgba(255, 152, 0, 0.6)'\n  },\n  [EmotionType.LOVE]: {\n    color: '#E91E63',\n    label: '喜爱',\n    shadow: '0 0 15px rgba(233, 30, 99, 0.6)'\n  },\n  [EmotionType.GRATEFUL]: {\n    color: '#8BC34A',\n    label: '感恩',\n    shadow: '0 0 15px rgba(139, 195, 74, 0.6)'\n  },\n  [EmotionType.PEACEFUL]: {\n    color: '#00BCD4',\n    label: '平静',\n    shadow: '0 0 15px rgba(0, 188, 212, 0.6)'\n  },\n  [EmotionType.HOPEFUL]: {\n    color: '#4CAF50',\n    label: '希望',\n    shadow: '0 0 15px rgba(76, 175, 80, 0.6)'\n  },\n  \n  // 负向情绪\n  [EmotionType.SAD]: {\n    color: '#2196F3',\n    label: '难过',\n    shadow: '0 0 15px rgba(33, 150, 243, 0.6)'\n  },\n  [EmotionType.ANGRY]: {\n    color: '#F44336',\n    label: '生气',\n    shadow: '0 0 15px rgba(244, 67, 54, 0.6)'\n  },\n  [EmotionType.ANXIOUS]: {\n    color: '#9C27B0',\n    label: '焦虑',\n    shadow: '0 0 15px rgba(156, 39, 176, 0.6)'\n  },\n  [EmotionType.SHAME]: {\n    color: '#795548',\n    label: '羞愧',\n    shadow: '0 0 15px rgba(121, 85, 72, 0.6)'\n  },\n  [EmotionType.FEAR]: {\n    color: '#673AB7',\n    label: '恐惧',\n    shadow: '0 0 15px rgba(103, 58, 183, 0.6)'\n  },\n  [EmotionType.DISGUST]: {\n    color: '#607D8B',\n    label: '厌恶',\n    shadow: '0 0 15px rgba(96, 125, 139, 0.6)'\n  },\n  \n  // 中性情绪\n  [EmotionType.NEUTRAL]: {\n    color: '#9E9E9E',\n    label: '平静',\n    shadow: '0 0 15px rgba(158, 158, 158, 0.6)'\n  }\n};\n\n// 情感分析函数\nconst analyzeEmotion = (text) => {\n  const textLower = text.toLowerCase();\n  \n  // 场景识别\n  let detectedScenario = null;\n  let matchedKeywords = [];\n  \n  // 优先检查特殊场景\n  if (scenarioKeywords.conflict.some(keyword => textLower.includes(keyword))) {\n    detectedScenario = 'conflict';\n    matchedKeywords = scenarioKeywords.conflict.filter(keyword => textLower.includes(keyword));\n  } else if (scenarioKeywords.progress.some(keyword => textLower.includes(keyword))) {\n    detectedScenario = 'progress';\n    matchedKeywords = scenarioKeywords.progress.filter(keyword => textLower.includes(keyword));\n  } else {\n    // 检查其他场景\n    for (const [key, words] of Object.entries(scenarioKeywords)) {\n      if (key !== 'conflict' && key !== 'progress' && words.some(word => textLower.includes(word))) {\n        detectedScenario = key;\n        matchedKeywords = words.filter(word => textLower.includes(word));\n        break;\n      }\n    }\n  }\n\n  // 扩展关键词匹配 - 正向情绪\n  const happyKeywords = ['开心', '高兴', '快乐', '好', '棒', '赞', '喜欢', '嘻嘻', '哈哈', '嘿嘿', '欢喜', '快活', '欢乐'];\n  const excitedKeywords = ['兴奋', '激动', '太棒了', '太赞了', '太厉害了', '好棒', '好厉害', '好强', '自豪', '骄傲', '成就'];\n  const loveKeywords = ['爱', '喜欢', '爱慕', '思念', '想念', '怀念', '依恋', '珍惜', '疼爱', '迷恋', '宠爱', '亲密'];\n  const gratefulKeywords = ['感谢', '感恩', '谢谢', '感激', '荣幸', '幸运', '幸福', '满足', '知足', '感动'];\n  const peacefulKeywords = ['平静', '安宁', '放松', '宁静', '祥和', '舒适', '安心', '坦然', '从容', '淡定'];\n  const hopefulKeywords = ['希望', '期待', '盼望', '向往', '梦想', '憧憬', '展望', '乐观', '信心', '信任'];\n  \n  // 负向情绪关键词\n  const sadKeywords = ['难过', '伤心', '悲伤', '不好', '糟糕', '失望', '痛苦', '遗憾', '惆怅', '忧伤', '难受', '沮丧'];\n  const angryKeywords = ['生气', '愤怒', '恼火', '气死', '愤恨', '气愤', '恼怒', '怒火', '发火', '暴怒', '不爽', '烦'];\n  const anxiousKeywords = ['担心', '焦虑', '紧张', '忧虑', '烦恼', '不安', '惶恐', '忐忑', '揪心', '着急', '压力'];\n  const fearKeywords = ['害怕', '恐惧', '惊恐', '惊吓', '惊慌', '畏惧', '恐慌', '胆怯'];\n  const shameKeywords = ['羞愧', '羞耻', '惭愧', '丢脸', '尴尬', '难堪', '羞涩', '窘迫', '惭愧'];\n  const disgustKeywords = ['厌恶', '反感', '讨厌', '恶心', '憎恨', '嫌弃', '排斥', '恶感'];\n\n  // 情感分析结果\n  let emotion = EmotionType.NEUTRAL;\n  let intensity = 1;\n\n  // 判断情绪类型 - 按优先级检查\n  // 负向情绪\n  if (fearKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.FEAR;\n    intensity = 1.6;\n  } else if (angryKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.ANGRY;\n    intensity = 1.5;\n  } else if (sadKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.SAD;\n    intensity = 1.3;\n  } else if (anxiousKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.ANXIOUS;\n    intensity = 1.4;\n  } else if (shameKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.SHAME;\n    intensity = 1.2;\n  } else if (disgustKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.DISGUST;\n    intensity = 1.3;\n  } \n  // 正向情绪\n  else if (excitedKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.EXCITED;\n    intensity = 1.7;\n  } else if (happyKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.HAPPY;\n    intensity = 1.5;\n  } else if (loveKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.LOVE;\n    intensity = 1.6;\n  } else if (gratefulKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.GRATEFUL;\n    intensity = 1.4;\n  } else if (hopefulKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.HOPEFUL;\n    intensity = 1.3;\n  } else if (peacefulKeywords.some(keyword => textLower.includes(keyword))) {\n    emotion = EmotionType.PEACEFUL;\n    intensity = 1.1;\n  }\n\n  // 场景特定情绪覆盖\n  if (detectedScenario === 'conflict') {\n    emotion = EmotionType.ANGRY;\n    intensity = 1.5;\n  } else if (detectedScenario === 'progress') {\n    emotion = EmotionType.EXCITED;\n    intensity = 1.2;\n  }\n\n  return {\n    emotion,\n    intensity,\n    scenario: detectedScenario,\n    keywords: matchedKeywords,\n    isPositive: [EmotionType.HAPPY, EmotionType.EXCITED, EmotionType.LOVE, \n                EmotionType.GRATEFUL, EmotionType.PEACEFUL, EmotionType.HOPEFUL].includes(emotion)\n  };\n};\n\n// 虚拟角色回复模板\nconst characterResponses = {\n  life: {\n    [EmotionType.HAPPY]: [\n      '检测到快乐能量～让我用魔法棒把这份快乐变成永恒吧～✨',\n      '哇～你的快乐指数爆表了～来点彩虹糖庆祝一下～🌈',\n      '快乐能量正在扩散～连我的小机器人都在跳舞了～🤖'\n    ],\n    [EmotionType.SAD]: [\n      '检测到\"难过\"能量～我派外星人把烦恼偷走了～🛸',\n      '别担心～我的魔法口袋里有超多快乐糖果，给你一颗～🍬',\n      '让我用魔法把乌云变成彩虹吧～🌈'\n    ],\n    [EmotionType.ANGRY]: [\n      '检测到\"愤怒\"能量～来杯魔法冰镇柠檬水降降温～🍋',\n      '生气的时候，我的小机器人会跳搞笑舞蹈给你看～🤖',\n      '让我用魔法把怒火变成烟花吧～🎆'\n    ],\n    [EmotionType.NEUTRAL]: [\n      '检测到\"平静\"能量～来点魔法小点心吧～🍪',\n      '平静的时候最适合喝杯魔法茶～☕️',\n      '我的小机器人说，平静也是一种力量～🤖'\n    ],\n    [EmotionType.ANXIOUS]: [\n      '检测到\"焦虑\"能量～来颗魔法糖果压压惊～🍬',\n      '焦虑的时候，我的小机器人会讲笑话给你听～🤖',\n      '让我用魔法把焦虑变成勇气吧～✨'\n    ],\n    [EmotionType.EXCITED]: [\n      '检测到\"兴奋\"能量～来点魔法烟花庆祝～🎆',\n      '太棒了～我的小机器人都在为你欢呼～🤖',\n      '兴奋能量爆表～来杯魔法果汁吧～🍹'\n    ]\n  },\n  social: {\n    [EmotionType.HAPPY]: [\n      '检测到\"社交快乐\"能量～来点魔法小饼干分享给朋友～🍪',\n      '社交达人模式启动～我的小机器人都在为你鼓掌～🤖',\n      '快乐能量正在扩散～来点魔法糖果分享～🍬'\n    ],\n    [EmotionType.SAD]: [\n      '检测到\"社交焦虑\"能量～来杯魔法奶茶放松一下～🧋',\n      '社交压力大～我的小机器人会讲笑话帮你缓解～🤖',\n      '让我用魔法把社交压力变成动力吧～✨'\n    ],\n    [EmotionType.ANGRY]: [\n      '检测到\"社交冲突\"能量～来颗魔法糖果冷静一下～🍬',\n      '生气的时候，我的小机器人会跳搞笑舞蹈～🤖',\n      '让我用魔法把冲突变成和解吧～✨'\n    ],\n    [EmotionType.NEUTRAL]: [\n      '检测到\"社交平衡\"能量～来点魔法小点心～🍪',\n      '平静的社交状态，我的小机器人说这很好～🤖',\n      '社交就像调味料，适量就好～来杯魔法茶～☕️'\n    ],\n    [EmotionType.ANXIOUS]: [\n      '检测到\"社交焦虑\"能量～来颗魔法糖果压压惊～🍬',\n      '焦虑的时候，我的小机器人会讲笑话～🤖',\n      '让我用魔法把焦虑变成勇气吧～✨'\n    ],\n    [EmotionType.EXCITED]: [\n      '检测到\"社交兴奋\"能量～来点魔法烟花庆祝～🎆',\n      '太棒了～我的小机器人都在为你欢呼～🤖',\n      '社交达人模式启动～来杯魔法果汁～🍹'\n    ]\n  },\n  work: {\n    [EmotionType.HAPPY]: [\n      '检测到\"工作快乐\"能量～来点魔法小饼干庆祝～🍪',\n      '工作达人模式启动～我的小机器人都在为你鼓掌～🤖',\n      '快乐能量正在扩散～来点魔法糖果～🍬'\n    ],\n    [EmotionType.SAD]: [\n      '检测到\"工作压力\"能量～来杯魔法奶茶放松一下～🧋',\n      '工作不顺心～我的小机器人会讲笑话帮你缓解～🤖',\n      '让我用魔法把工作压力变成动力吧～✨'\n    ],\n    [EmotionType.ANGRY]: [\n      '检测到\"工作烦恼\"能量～来颗魔法糖果冷静一下～🍬',\n      '生气的时候，我的小机器人会跳搞笑舞蹈～🤖',\n      '让我用魔法把烦恼变成动力吧～✨'\n    ],\n    [EmotionType.NEUTRAL]: [\n      '检测到\"工作平衡\"能量～来点魔法小点心～🍪',\n      '平静的工作状态，我的小机器人说这很好～🤖',\n      '工作也需要节奏，来杯魔法茶～☕️'\n    ],\n    [EmotionType.ANXIOUS]: [\n      '检测到\"工作焦虑\"能量～来颗魔法糖果压压惊～🍬',\n      '焦虑的时候，我的小机器人会讲笑话～🤖',\n      '让我用魔法把焦虑变成勇气吧～✨'\n    ],\n    [EmotionType.EXCITED]: [\n      '检测到\"工作兴奋\"能量～来点魔法烟花庆祝～🎆',\n      '太棒了～我的小机器人都在为你欢呼～🤖',\n      '工作达人模式启动～来杯魔法果汁～🍹'\n    ]\n  },\n  conflict: {\n    [EmotionType.ANGRY]: [\n      '遇到冲突，我理解你的心情，能跟我说说具体发生了什么吗～',\n      '这种情况确实会让人不开心，要不要详细说说看～',\n      '我在这里陪着你，慢慢说给我听好吗～'\n    ],\n    [EmotionType.NEUTRAL]: [\n      '冲突已经解决，让我们一起庆祝和平吧～',\n      '冲突是暂时的，让我们一起寻找解决方案～',\n      '冲突让我们更加团结，一起加油吧～'\n    ],\n    [EmotionType.ANXIOUS]: [\n      '冲突让我感到有些焦虑，能告诉我是什么让你这么难过吗～',\n      '事情是怎么发生的呢～我很想了解～',\n      '你觉得最让你受伤的部分是什么呢～'\n    ]\n  },\n  progress: {\n    [EmotionType.EXCITED]: [\n      '哇～听起来你完成了很了不起的事情呢～',\n      '这个进度真的超棒的～你一定付出了很多努力～',\n      '看到你取得这样的成果，我也替你开心呢～'\n    ],\n    [EmotionType.NEUTRAL]: [\n      '进度正常，继续保持这个势头～',\n      '进度进展顺利，继续加油吧～',\n      '进度让我们感到很满意，继续保持～'\n    ],\n    [EmotionType.ANXIOUS]: [\n      '进度有些缓慢，让我帮你分析一下原因好吗～',\n      '进度不如预期，让我一起寻找解决方案～',\n      '进度让我们感到有些焦虑，能告诉我是什么让你担心吗～'\n    ]\n  }\n}\n\n// 场景特定回复\nconst scenarioResponses = {\n  pet: {\n    [EmotionType.SAD]: [\n      '人好，小动物坏～抱抱宝～🤗',\n      '小动物不懂事，主人最棒～摸摸头～👋',\n      '别生气啦，小动物也是无心的～抱抱～🤗'\n    ],\n    [EmotionType.ANGRY]: [\n      '小动物调皮，主人别气～摸摸头～👋',\n      '生气伤身体，来抱抱～🤗',\n      '小动物不懂事，主人最棒～抱抱～🤗'\n    ]\n  },\n  work: {\n    [EmotionType.SAD]: [\n      '工作压力大，来抱抱～🤗',\n      '工作不顺心，来杯奶茶～🧋',\n      '工作再难，也要开心～抱抱～🤗'\n    ],\n    [EmotionType.ANGRY]: [\n      '工作再气，也要开心～抱抱～🤗',\n      '工作压力大，来杯奶茶～🧋',\n      '工作再难，也要开心～抱抱～🤗'\n    ]\n  },\n  study: {\n    [EmotionType.SAD]: [\n      '学习压力大，来抱抱～🤗',\n      '学习再难，也要开心～抱抱～🤗',\n      '学习不顺心，来杯奶茶～🧋'\n    ],\n    [EmotionType.ANGRY]: [\n      '学习再气，也要开心～抱抱～🤗',\n      '学习压力大，来杯奶茶～🧋',\n      '学习再难，也要开心～抱抱～🤗'\n    ]\n  },\n  entertainment: {\n    [EmotionType.HAPPY]: [\n      '哇，现场一定很棒吧～✨',\n      '好羡慕呀，一定很精彩吧～🎵',\n      '太棒了，一定是个难忘的夜晚～🌟'\n    ],\n    [EmotionType.EXCITED]: [\n      '哇，现场一定超级震撼吧～✨',\n      '好羡慕呀，一定是个难忘的夜晚～🎵',\n      '太棒了，一定是个精彩的演出～🌟'\n    ]\n  },\n  conflict: {\n    [EmotionType.ANGRY]: [\n      '遇到冲突，我理解你的心情，能跟我说说具体发生了什么吗～',\n      '这种情况确实会让人不开心，要不要详细说说看～',\n      '我在这里陪着你，慢慢说给我听好吗～'\n    ],\n    [EmotionType.NEUTRAL]: [\n      '冲突已经解决，让我们一起庆祝和平吧～',\n      '冲突是暂时的，让我们一起寻找解决方案～',\n      '冲突让我们更加团结，一起加油吧～'\n    ],\n    [EmotionType.ANXIOUS]: [\n      '冲突让我感到有些焦虑，能告诉我是什么让你这么难过吗～',\n      '事情是怎么发生的呢～我很想了解～',\n      '你觉得最让你受伤的部分是什么呢～'\n    ]\n  },\n  progress: {\n    [EmotionType.EXCITED]: [\n      '哇～听起来你完成了很了不起的事情呢～',\n      '这个进度真的超棒的～你一定付出了很多努力～',\n      '看到你取得这样的成果，我也替你开心呢～'\n    ],\n    [EmotionType.NEUTRAL]: [\n      '进度正常，继续保持这个势头～',\n      '进度进展顺利，继续加油吧～',\n      '进度让我们感到很满意，继续保持～'\n    ],\n    [EmotionType.ANXIOUS]: [\n      '进度有些缓慢，让我帮你分析一下原因好吗～',\n      '进度不如预期，让我一起寻找解决方案～',\n      '进度让我们感到有些焦虑，能告诉我是什么让你担心吗～'\n    ]\n  }\n}\n\n// 添加上下文管理\nconst conversationContext = ref({\n  lastEmotion: null,\n  lastScenario: null,\n  emotionHistory: [],\n  scenarioHistory: [],\n  userInputCount: 0,\n  lastResponse: null\n})\n\n// 引导用户输入的问题模板\nconst followUpQuestions = {\n  pet: {\n    [EmotionType.SAD]: [\n      '小动物最近是不是心情不好呀～要不要给它买点好吃的～',\n      '要不要给小动物换个新玩具，让它开心一下～',\n      '要不要给小动物洗个澡，让它香香的～'\n    ],\n    [EmotionType.ANGRY]: [\n      '小动物是不是最近太调皮了～要不要教它一些规矩～',\n      '要不要给小动物买个新玩具，转移它的注意力～',\n      '要不要给小动物换个新环境，让它开心一下～'\n    ]\n  },\n  work: {\n    [EmotionType.SAD]: [\n      '工作是不是遇到什么困难了～要不要说出来听听～',\n      '要不要休息一下，喝杯奶茶放松一下～',\n      '要不要听听音乐，转换一下心情～'\n    ],\n    [EmotionType.ANGRY]: [\n      '工作是不是遇到什么烦心事了～要不要说出来听听～',\n      '要不要出去走走，呼吸一下新鲜空气～',\n      '要不要听听音乐，转换一下心情～'\n    ]\n  },\n  study: {\n    [EmotionType.SAD]: [\n      '学习是不是遇到什么困难了～要不要说出来听听～',\n      '要不要休息一下，喝杯奶茶放松一下～',\n      '要不要听听音乐，转换一下心情～'\n    ],\n    [EmotionType.ANGRY]: [\n      '学习是不是遇到什么烦心事了～要不要说出来听听～',\n      '要不要出去走走，呼吸一下新鲜空气～',\n      '要不要听听音乐，转换一下心情～'\n    ]\n  },\n  entertainment: {\n    [EmotionType.HAPPY]: [\n      '最喜欢哪首歌呀～要不要分享一下～',\n      '现场氛围一定很棒吧～要不要说说感受～',\n      '有没有拍到好看的照片呀～要不要分享一下～'\n    ],\n    [EmotionType.EXCITED]: [\n      '最喜欢哪首歌呀～要不要分享一下～',\n      '现场氛围一定超级棒吧～要不要说说感受～',\n      '有没有拍到好看的照片呀～要不要分享一下～'\n    ]\n  }\n}\n\n// 生成引导问题\nconst generateFollowUpQuestion = (scenario, emotion) => {\n  if (followUpQuestions[scenario]?.[emotion]) {\n    const questions = followUpQuestions[scenario][emotion]\n    const randomIndex = Math.floor(Math.random() * questions.length)\n    return questions[randomIndex]\n  }\n  return null\n}\n\n// 检查情感关键词得分\nconst check_emotion_keywords = (message) => {\n  const emotionKeywords = {\n    positive: ['开心', '快乐', '高兴', '棒', '好', '喜欢', '爱', '感谢', '期待'],\n    negative: ['难过', '伤心', '痛苦', '烦恼', '讨厌', '生气', '焦虑', '害怕'],\n    neutral: ['还行', '一般', '普通', '正常']\n  }\n  \n  let score = 1\n  const text = message.toLowerCase()\n  \n  // 积极情感加分\n  if (emotionKeywords.positive.some(word => text.includes(word))) {\n    score += 0.5\n  }\n  // 消极情感也适当加分，因为表示用户倾诉意愿强\n  if (emotionKeywords.negative.some(word => text.includes(word))) {\n    score += 0.3\n  }\n  \n  return score\n}\n\n// 检查是否匹配用户画像\nconst match_user_profile = (message) => {\n  // 从localStorage获取用户特征\n  const userTraits = personalityResult.value.traits || []\n  const text = message.toLowerCase()\n  \n  // 检查消息是否包含用户特征相关的关键词\n  return userTraits.some(trait => {\n    const traitKeyword = trait.replace(/[✨🌟🎯🎨💬🎭🤔😊📱🎮📊🤝💪🌙☀️]/g, '').trim()\n    return text.includes(traitKeyword)\n  })\n}\n\n// 计算消息权重\nconst calculate_weight = (message, position, shortTermLength) => {\n  // 时间衰减：越新的消息权重越高\n  const time_decay = Math.pow(0.9, shortTermLength - position - 1)\n  \n  // 情感分数\n  const emotion_score = check_emotion_keywords(message)\n  \n  // 个性化分数：如果匹配用户画像则提升权重\n  const personalization = match_user_profile(message) ? 1.5 : 1\n  \n  return time_decay * (emotion_score + personalization)\n}\n\n// 在生成回复时使用权重\nconst generateResponse = (text, scenario) => {\n  try {\n    // 检查是否为乱码或无序字符\n    if (isGibberish(text)) {\n      return '诶呀～我看不懂你发的内容呢～可以用正常的文字跟我聊天吗？✨';\n    }\n    \n    const analysis = analyzeEmotion(text);\n    const { emotion, intensity, scenario: detectedScenario, keywords, isPositive } = analysis;\n    \n    // 选择回复策略 - 正向情绪使用共感，负向情绪使用安抚\n    const strategy = isPositive ? 'empathize' : 'comfort';\n    \n    // 构建回复\n    let response = '';\n    \n    if (strategy === 'empathize') {\n      // 正向情绪策略：共感\n      const empathyPhrases = [\n        '我能感受到你的{{emotion}}～真为你开心～✨',\n        '你的{{emotion}}情绪让我也受到感染～太棒了～🎉',\n        '真心为你感到{{emotion}}～这真是个好消息～💫'\n      ];\n      \n      // 选择短语并替换情绪词\n      response = empathyPhrases[Math.floor(Math.random() * empathyPhrases.length)]\n        .replace('{{emotion}}', emotionColorMap[emotion]?.label || '愉快');\n      \n    } else {\n      // 负向情绪策略：安抚\n      const comfortPhrases = [\n        '听到你感到{{emotion}}，我能理解这种感受～🌧 愿意和我多说说发生了什么吗？',\n        '当你感到{{emotion}}的时候，愿意和我说说发生了什么吗～🍃 我会认真听你倾诉。',\n        '面对{{emotion}}的时候，倾诉出来会好受一些～💭 你想聊聊具体的原因吗？',\n        '有时候把{{emotion}}说出来会轻松很多，我在这里陪着你～',\n        '如果你愿意，可以详细说说你的感受，我会一直陪着你～'\n      ];\n      \n      // 选择短语并替换情绪词\n      response = comfortPhrases[Math.floor(Math.random() * comfortPhrases.length)]\n        .replace('{{emotion}}', emotionColorMap[emotion]?.label || '不适');\n    }\n    \n    return response;\n    \n  } catch (error) {\n    console.error('生成回复时出错:', error);\n    return '诶呀，你说的太难啦～这次我没有听懂～';\n  }\n};\n\n// 发送消息\nconst sendMessage = async () => {\n  if (!newMessage.value.trim() || isThinking.value) return;\n  \n  const messageContent = newMessage.value;\n  \n  // 检查消息长度\n  if (messageContent.length > 500) {\n    // 用户消息过长\n    messages.value.push({\n      type: 'assistant',\n      content: '你发送的消息有点长哦～能简短一些吗？我最喜欢简短又有趣的聊天啦～✨'\n    });\n    return;\n  }\n  \n  // 添加用户消息\n  messages.value.push({\n    type: 'user',\n    content: messageContent,\n    timestamp: new Date().toISOString() // 添加时间戳\n  });\n  \n  // 保存到历史\n  saveUserMessageHistory(messageContent)\n  \n  // 立即保存到localStorage\n  localStorage.setItem('chatMessages', JSON.stringify(messages.value));\n  \n  // 清空输入框\n  newMessage.value = '';\n  \n  // 生成AI回复\n  isThinking.value = true;\n  try {\n    // 模拟延迟\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // 根据用户消息和当前场景生成回复\n    const response = generateResponse(messageContent, selectedScenario.value);\n    \n    // 添加AI回复\n    messages.value.push({\n      type: 'assistant',\n      content: response,\n      timestamp: new Date().toISOString() // 添加时间戳\n    });\n    \n    // 添加到情绪瓶 - 只有当不是乱码时\n    if (!isGibberish(messageContent)) {\n      addEmotionBottle(messageContent);\n    }\n    \n    await scrollToBottom();\n  } catch (error) {\n    console.error('发送消息失败:', error);\n    messages.value.push({\n      type: 'assistant',\n      content: '诶呀，你说的太难啦～这次我没有听懂～',\n      timestamp: new Date().toISOString() // 添加时间戳\n    });\n  } finally {\n    isThinking.value = false;\n  }\n};\n\nonMounted(() => {\n  scrollToBottom()\n  // 从localStorage获取用户答案\n  const answers = JSON.parse(localStorage.getItem('onboardingAnswers') || '{}')\n  userAnswers.value = answers\n  \n  // 检查是否首次进入\n  const hasShownPanel = localStorage.getItem('hasShownPanel')\n  console.log('Answers:', answers)\n  console.log('Has shown panel:', hasShownPanel)\n  \n  // 如果用户有答案且未显示过面板，则显示面板\n  if (Object.keys(answers).length > 0 && !hasShownPanel) {\n    console.log('Showing panel')\n    showPanel.value = true\n    localStorage.setItem('hasShownPanel', 'true')\n  }\n  \n  if (Object.keys(answers).length > 0) {\n    const answerKey = Object.values(answers).join('')\n    const result = personalityMap[answerKey]\n    if (result) {\n      personalityResult.value = {\n        ...result,\n        traits: generateTraits(answers)\n      }\n    }\n  }\n  \n  // 确保所有消息都有时间戳\n  messages.value.forEach(message => {\n    if (!message.timestamp) {\n      message.timestamp = new Date().toISOString();\n    }\n  });\n  \n  // 从localStorage获取情绪瓶数据\n  const savedEmotionBottles = localStorage.getItem('emotionBottles')\n  if (savedEmotionBottles) {\n    emotionBottles.value = JSON.parse(savedEmotionBottles)\n  }\n  \n  // 加载历史\n  const savedUserHistory = localStorage.getItem('userMessageHistory')\n  if (savedUserHistory) {\n    userMessageHistory.value = JSON.parse(savedUserHistory)\n  }\n  \n  // 从localStorage获取聊天记录\n  const savedMessages = localStorage.getItem('chatMessages');\n  if (savedMessages) {\n    messages.value = JSON.parse(savedMessages);\n  }\n})\n\n// 监听场景变化，更新提示词\nwatch(selectedScenario, (newScenario) => {\n  messages.value = []\n})\n\n// 防止 personalityMap 未定义报错\nconst personalityMap = {}\n\nconst scenarioIconRef = ref(null)\n\nwatch(selectedScenario, async () => {\n  await nextTick()\n  if (scenarioIconRef.value) {\n    scenarioIconRef.value.classList.remove('shake')\n    // 触发重绘，确保动画可重复触发\n    void scenarioIconRef.value.offsetWidth\n    scenarioIconRef.value.classList.add('shake')\n  }\n})\n\nconst hasUserMessage = computed(() => messages.value.some(m => m.type === 'user'))\n\n// 定义人格类型\nconst PersonalityType = {\n  DEFAULT: 'default',\n  SARCASTIC: 'sarcastic', // 毒舌模式\n  EMPATHETIC: 'empathetic', // 治愈模式\n  HUMOROUS: 'humorous', // 幽默模式\n  PROFESSIONAL: 'professional' // 专业模式\n}\n\n// 人格特征定义\nconst personalityTraits = {\n  [PersonalityType.DEFAULT]: {\n    name: '元气魔法师',\n    tone: '温暖活泼',\n    keywords: ['魔法', '小机器人', '能量']\n  },\n  [PersonalityType.SARCASTIC]: {\n    name: '吐槽小能手',\n    tone: '犀利幽默',\n    keywords: ['不过', '但是', '确实']\n  },\n  [PersonalityType.EMPATHETIC]: {\n    name: '暖心治愈师',\n    tone: '温柔体贴',\n    keywords: ['理解', '感受', '相信']\n  },\n  [PersonalityType.HUMOROUS]: {\n    name: '欢乐果果',\n    tone: '轻松搞笑',\n    keywords: ['哈哈', '笑死', '好玩']\n  },\n  [PersonalityType.PROFESSIONAL]: {\n    name: '专业顾问',\n    tone: '严谨专业',\n    keywords: ['建议', '分析', '方案']\n  }\n}\n\n// 多风格回复模板\nconst responseTemplates = {\n  question: {\n    direct: [\n      \"你说的{entity}是什么样的呢～\",\n      \"{entity}能具体说说吗～\",\n      \"想多听听关于{entity}的事情呢～\"\n    ],\n    related: [\n      \"这个{entity}和之前说的{history_entity}有关系吗～\",\n      \"听你提到{entity}，让我想起之前聊过的{history_entity}～\",\n      \"{entity}让我想到了{history_entity}，有什么联系吗～\"\n    ]\n  },\n  empathy: {\n    metaphor: [\n      \"我懂这种{emotion}的感觉，就像{metaphor}一样～\",\n      \"这种{emotion}的心情，感觉像是{metaphor}呢～\",\n      \"{emotion}的时候，总让人想起{metaphor}～\"\n    ],\n    comfort: [\n      \"给你一个虚拟{comfort_object}，希望能让你感觉好一些～\",\n      \"来，抱抱这个{comfort_object}，我们慢慢聊～\",\n      \"让{comfort_object}陪着你，一起度过这个时刻～\"\n    ]\n  },\n  metaphors: {\n    '开心': ['阳光照进云层', '春天的第一朵花', '刚出炉的面包'],\n    '难过': ['下雨的午后', '凋零的花瓣', '远行的风筝'],\n    '生气': ['翻滚的火山', '暴风雨的海面', '炸毛的猫咪'],\n    '焦虑': ['迷雾中的小路', '等待信号的手机', '转动的时钟'],\n    '期待': ['日出前的黎明', '即将绽放的花苞', '启程的列车']\n  },\n  comfortObjects: {\n    '开心': ['彩虹糖', '小星星', '幸运花'],\n    '难过': ['暖暖抱枕', '毛绒玩偶', '温暖茶杯'],\n    '生气': ['解压球', '冰淇淋', '软软云朵'],\n    '焦虑': ['安神茶', '香香蜡烛', '轻柔音乐'],\n    '期待': ['幸运符', '魔法棒', '彩虹糖']\n  }\n}\n\n// 消息权重计算系统\nconst calculateMessageWeight = (message, context) => {\n  let weight = 1.0;\n  \n  // 时间衰减因子\n  const timeDecay = Math.exp(-0.1 * (Date.now() - message.timestamp) / (1000 * 60 * 60)); // 每小时衰减约10%\n  weight *= timeDecay;\n  \n  // 情感分数\n  const emotionAnalysis = analyzeEmotion(message.content);\n  const emotionIntensity = emotionAnalysis.intensity || 1;\n  weight *= (1 + 0.2 * emotionIntensity); // 情感强度每增加1，权重增加20%\n  \n  // 个性化分数\n  if (context.userTraits && context.userTraits.length > 0) {\n    const matchingTraits = context.userTraits.filter(trait => \n      message.content.toLowerCase().includes(trait.toLowerCase())\n    );\n    weight *= (1 + 0.1 * matchingTraits.length); // 每匹配一个特征，权重增加10%\n  }\n  \n  return weight;\n};\n\n// 动态人格引擎\nconst PersonalityEngine = {\n  DEFAULT: {\n    name: '元气魔法师',\n    responseStyle: '温暖活泼',\n    emotionKeywords: ['魔法', '小机器人', '能量'],\n    responseTemplates: {\n      happy: ['太棒了～让我们一起庆祝这个魔法时刻✨', '开心的能量正在扩散～'],\n      sad: ['让我用魔法给你一个温暖的抱抱～', '不开心的时候，我会一直陪着你～'],\n      angry: ['生气的时候，来颗魔法糖冷静一下吧～', '让我们一起把怒气变成魔法能量～']\n    }\n  },\n  SARCASTIC: {\n    name: '吐槽小能手',\n    responseStyle: '犀利幽默',\n    emotionKeywords: ['不过', '但是', '确实'],\n    responseTemplates: {\n      happy: ['哎哟，这么开心啊，小心笑岔气～', '啧啧，笑得这么开心，是中彩票了吗～'],\n      sad: ['别难过了，比你惨的人多了去了～', '哭也没用，还不如想想怎么解决问题～'],\n      angry: ['生这么大气，值得吗～', '气归气，别把自己气坏了～']\n    }\n  },\n  EMPATHETIC: {\n    name: '暖心治愈师',\n    responseStyle: '温柔体贴',\n    emotionKeywords: ['理解', '感受', '相信'],\n    responseTemplates: {\n      happy: ['看到你开心，我也很开心呢～', '这份快乐真的很珍贵呢～'],\n      sad: ['我完全理解你的感受，让我陪着你～', '不要担心，一切都会好起来的～'],\n      angry: ['你的感受我都明白，要好好照顾自己～', '生气是很正常的，让我们一起面对～']\n    }\n  },\n  HUMOROUS: {\n    name: '欢乐果果',\n    responseStyle: '轻松搞笑',\n    emotionKeywords: ['哈哈', '笑死', '好玩'],\n    responseTemplates: {\n      happy: ['哈哈哈，笑得我的程序都要当机啦～', '太开心啦，我都想跳个机械舞庆祝一下～'],\n      sad: ['别难过啦，来听个笑话：机器人为什么不能喝酒？因为会短路～', '心情不好的时候，就想想我这个傻傻的AI～'],\n      angry: ['生气的时候，不如学我做个鬼脸：😝～', '气得冒烟了吧？要不要我给你当个人工降温器～']\n    }\n  },\n  PROFESSIONAL: {\n    name: '专业顾问',\n    responseStyle: '严谨专业',\n    emotionKeywords: ['建议', '分析', '方案'],\n    responseTemplates: {\n      happy: ['从心理学角度来看，保持积极情绪对身心健康很有帮助。', '这种正向情绪值得好好保持。'],\n      sad: ['研究表明，适度表达负面情绪有助于心理调节。', '让我们一起分析一下造成这种情绪的原因。'],\n      angry: ['愤怒情绪需要合理疏导，建议可以尝试深呼吸。', '从理性角度思考，我们来分析一下解决方案。']\n    }\n  }\n};\n\n// 根据上下文选择合适的人格\nconst selectPersonality = (context) => {\n  const { emotionHistory, messageCount, userTraits } = context;\n  \n  // 分析最近的情感倾向\n  const recentEmotions = emotionHistory.slice(-5);\n  const emotionalState = recentEmotions.reduce((acc, emotion) => {\n    acc[emotion] = (acc[emotion] || 0) + 1;\n    return acc;\n  }, {});\n  \n  // 根据情感状态和用户特征选择人格\n  if (emotionalState.sad > 2 || emotionalState.anxious > 2) {\n    return PersonalityEngine.EMPATHETIC;\n  } else if (emotionalState.angry > 2) {\n    return PersonalityEngine.PROFESSIONAL;\n  } else if (emotionalState.happy > 2) {\n    return PersonalityEngine.HUMOROUS;\n  } else if (messageCount > 10 && userTraits.includes('幽默')) {\n    return PersonalityEngine.SARCASTIC;\n  }\n  \n  return PersonalityEngine.DEFAULT;\n};\n\n// 丰富的比喻库\nconst metaphorLibrary = {\n  happy: [\n    { text: '像春天的第一缕阳光', emotion: '温暖', intensity: 0.8 },\n    { text: '如同刚出炉的面包', emotion: '温馨', intensity: 0.7 },\n    { text: '像跳跃的音符', emotion: '欢快', intensity: 0.9 },\n    { text: '如同彩虹般绚丽', emotion: '美好', intensity: 1.0 },\n    { text: '像清晨的露珠', emotion: '清新', intensity: 0.6 }\n  ],\n  sad: [\n    { text: '像雨后的落叶', emotion: '忧伤', intensity: 0.7 },\n    { text: '如同灰蒙蒙的天空', emotion: '压抑', intensity: 0.8 },\n    { text: '像远去的风筝', emotion: '失落', intensity: 0.6 },\n    { text: '如同凋零的花瓣', emotion: '伤感', intensity: 0.9 },\n    { text: '像静默的湖面', emotion: '平静', intensity: 0.5 }\n  ],\n  angry: [\n    { text: '像沸腾的开水', emotion: '激动', intensity: 0.9 },\n    { text: '如同炸毛的猫咪', emotion: '暴躁', intensity: 0.8 },\n    { text: '像翻滚的火山', emotion: '愤怒', intensity: 1.0 },\n    { text: '如同狂风暴雨', emotion: '躁动', intensity: 0.9 },\n    { text: '像炙热的太阳', emotion: '燥热', intensity: 0.7 }\n  ],\n  anxious: [\n    { text: '像迷雾中的小船', emotion: '迷茫', intensity: 0.8 },\n    { text: '如同等待信号的手机', emotion: '焦虑', intensity: 0.7 },\n    { text: '像转动的时钟', emotion: '紧张', intensity: 0.6 },\n    { text: '如同绷紧的弦', emotion: '压力', intensity: 0.9 },\n    { text: '像笼中的小鸟', emotion: '不安', intensity: 0.8 }\n  ]\n};\n\n// 安慰物品库\nconst comfortItemLibrary = {\n  happy: [\n    { item: '彩虹糖', effect: '甜蜜加倍', probability: 0.8 },\n    { item: '幸运星', effect: '好运加持', probability: 0.7 },\n    { item: '魔法棒', effect: '愿望成真', probability: 0.9 },\n    { item: '欢乐气球', effect: '心情飞扬', probability: 0.6 },\n    { item: '微笑贴纸', effect: '快乐传递', probability: 0.8 }\n  ],\n  sad: [\n    { item: '暖心抱枕', effect: '温暖陪伴', probability: 0.9 },\n    { item: '治愈茶包', effect: '心情舒缓', probability: 0.8 },\n    { item: '毛绒玩偶', effect: '柔软安慰', probability: 0.9 },\n    { item: '音乐盒', effect: '轻柔安抚', probability: 0.7 },\n    { item: '暖暖贴', effect: '温暖守护', probability: 0.8 }\n  ],\n  angry: [\n    { item: '解压球', effect: '缓解压力', probability: 0.8 },\n    { item: '冰淇淋', effect: '冷静降温', probability: 0.9 },\n    { item: '呼吸瓶', effect: '平静心情', probability: 0.7 },\n    { item: '笑脸气球', effect: '转移注意', probability: 0.6 },\n    { item: '柔软抱枕', effect: '发泄情绪', probability: 0.8 }\n  ],\n  anxious: [\n    { item: '安神茶', effect: '舒缓紧张', probability: 0.9 },\n    { item: '香薰蜡烛', effect: '安神助眠', probability: 0.8 },\n    { item: '白噪音盒', effect: '平静心绪', probability: 0.7 },\n    { item: '捏捏玩具', effect: '分散注意', probability: 0.8 },\n    { item: '薰衣草包', effect: '安抚情绪', probability: 0.9 }\n  ]\n};\n\n// 获取合适的比喻\nconst getMetaphor = (emotion, intensity) => {\n  const metaphors = metaphorLibrary[emotion] || metaphorLibrary.happy;\n  const suitableMetaphors = metaphors.filter(m => Math.abs(m.intensity - intensity) < 0.3);\n  return suitableMetaphors[Math.floor(Math.random() * suitableMetaphors.length)];\n};\n\n// 获取合适的安慰物品\nconst getComfortItem = (emotion, intensity) => {\n  const items = comfortItemLibrary[emotion] || comfortItemLibrary.happy;\n  const suitableItems = items.filter(item => item.probability > 0.7);\n  return suitableItems[Math.floor(Math.random() * suitableItems.length)];\n};\n\n// 在script setup部分添加新的响应式变量\nconst emotionBottles = ref([]);\nconst newEmotionId = ref(null);\n\n// 添加新的情绪瓶\nconst addEmotionBottle = (message) => {\n  const analysis = analyzeEmotion(message);\n  const newBottle = {\n    id: Date.now(),\n    content: message,\n    emotion: analysis.emotion,\n    timestamp: new Date().toISOString(),\n    intensity: analysis.intensity\n  };\n  \n  emotionBottles.value.push(newBottle);\n  newEmotionId.value = newBottle.id;\n  \n  // 保存到localStorage\n  localStorage.setItem('emotionBottles', JSON.stringify(emotionBottles.value));\n  \n  // 3秒后清除新增标记\n  setTimeout(() => {\n    if (newEmotionId.value === newBottle.id) {\n      newEmotionId.value = null;\n    }\n  }, 3000);\n};\n\n// 计算情绪统计数据\nconst emotionStats = computed(() => {\n  const stats = {};\n  emotionBottles.value.forEach(entry => {\n    stats[entry.emotion] = (stats[entry.emotion] || 0) + 1;\n  });\n  return stats;\n});\n\nconst getMostFrequentEmotion = () => {\n  const stats = emotionStats.value;\n  let mostFrequent = null;\n  let maxCount = 0;\n  for (const emotion in stats) {\n    if (stats[emotion] > maxCount) {\n      mostFrequent = emotion;\n      maxCount = stats[emotion];\n    }\n  }\n  return mostFrequent ? emotionColorMap[mostFrequent]?.label || '暂无' : '暂无';\n};\n\n// 检测输入是否为乱码或无序字符\nconst isGibberish = (text) => {\n  if (!text || text.trim().length === 0) return false;\n  \n  // 1. 检查长度 - 太短的内容不算乱码\n  if (text.length < 2) return false;\n  \n  // 2. 检查重复字符比例\n  const charCounts = {};\n  for (const char of text) {\n    charCounts[char] = (charCounts[char] || 0) + 1;\n  }\n  \n  // 如果单一字符占比过高\n  const mostFrequentChar = Object.entries(charCounts).sort((a, b) => b[1] - a[1])[0];\n  if (mostFrequentChar[1] > text.length * 0.7) {\n    return true; // 例如: \"aaaaaaaabaa\"\n  }\n  \n  // 3. 检查中文文本的有效性\n  const chineseRegex = /[\\u4e00-\\u9fa5]/g;\n  const chineseChars = text.match(chineseRegex) || [];\n  const chinesePercent = chineseChars.length / text.length;\n  \n  // 如果包含中文，但有太多无法识别的字符\n  if (chinesePercent > 0 && chinesePercent < 0.3) {\n    const nonChineseNonCommonChars = text.replace(chineseRegex, '').replace(/[a-zA-Z0-9\\s,.!?;:'\"，。！？；：\"\"'']/g, '');\n    if (nonChineseNonCommonChars.length / text.length > 0.5) {\n      return true;\n    }\n  }\n  \n  // 4. 检查特殊字符比例\n  const specialChars = text.replace(/[\\u4e00-\\u9fa5a-zA-Z0-9\\s,.!?;:'\"，。！？；：\"\"'']/g, '');\n  if (specialChars.length / text.length > 0.5) {\n    return true; // 特殊字符过多\n  }\n  \n  // 5. 检查重复模式\n  let repeatedPatterns = 0;\n  for (let len = 2; len <= 5; len++) {\n    for (let i = 0; i <= text.length - len * 2; i++) {\n      const pattern = text.substring(i, i + len);\n      const nextSegment = text.substring(i + len, i + len * 2);\n      if (pattern === nextSegment) {\n        repeatedPatterns++;\n      }\n    }\n  }\n  \n  if (repeatedPatterns > text.length / 10) {\n    return true; // 重复模式过多\n  }\n  \n  return false;\n};\n\n// 添加时间格式化函数\nconst formatMessageTime = (timestamp) => {\n  if (!timestamp) return '';\n  \n  const messageDate = new Date(timestamp);\n  const now = new Date();\n  \n  // 检查是否是同一天\n  const isSameDay = messageDate.getDate() === now.getDate() &&\n                    messageDate.getMonth() === now.getMonth() &&\n                    messageDate.getFullYear() === now.getFullYear();\n  \n  if (isSameDay) {\n    // 当天消息，显示时:分\n    return messageDate.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' });\n  } else {\n    // 非当天消息，显示年-月-日\n    return messageDate.toLocaleDateString('zh-CN', { year: 'numeric', month: '2-digit', day: '2-digit' }).replace(/\\//g, '-');\n  }\n};\n\n// 用户消息历史\nconst userMessageHistory = ref([])\n\n// 保存用户消息到历史\nfunction saveUserMessageHistory(message) {\n  userMessageHistory.value.push({\n    content: message,\n    timestamp: new Date().toISOString()\n  })\n  // 最多保存100条\n  if (userMessageHistory.value.length > 100) {\n    userMessageHistory.value = userMessageHistory.value.slice(-100)\n  }\n  localStorage.setItem('userMessageHistory', JSON.stringify(userMessageHistory.value))\n}\n\n// 监听messages变化，自动保存到localStorage\nwatch(messages, (newVal) => {\n  localStorage.setItem('chatMessages', JSON.stringify(newVal));\n}, { deep: true });\n</script>\n\n<template>\n  <div class=\"chat-container\" :class=\"{ 'no-scroll': showPanel }\">\n    <div class=\"chat-header\">\n      <div class=\"nav-left\">\n        <div \n          class=\"nav-item\" \n          :class=\"{ active: activeTab === 'chat' }\"\n          @click=\"switchTab('chat')\"\n        >说说</div>\n        <div \n          class=\"nav-item\" \n          :class=\"{ active: activeTab === 'self' }\"\n          @click=\"switchTab('self')\"\n        >情绪瓶</div>\n      </div>\n    </div>\n    \n    <!-- 聊天页面 -->\n    <div v-if=\"activeTab === 'chat'\" class=\"chat-messages\" ref=\"messagesContainer\">\n      <!-- 顶部提示区：仅在无用户消息时展示 -->\n      <div v-if=\"!hasUserMessage\" class=\"chat-top-hint\">\n        <div class=\"scenario-icon-center\" :key=\"selectedScenario\">\n          <img :src=\"scenarios.find(s => s.id === selectedScenario)?.icon\" alt=\"icon\" class=\"shake\" />\n        </div>\n                  <div class=\"top-hint-text\">Hi，很高兴见到你～你可以跟我分享任何事情，我会一直陪着你</div>\n        <div class=\"scenario-selector\">\n          <div \n            v-for=\"scenario in scenarios\" \n            :key=\"scenario.id\"\n            class=\"scenario-item\"\n            :class=\"{ active: selectedScenario === scenario.id }\"\n            @click=\"selectedScenario = scenario.id\"\n          >\n            <span class=\"scenario-name\">{{ scenario.name }}</span>\n          </div>\n        </div>\n      </div>\n      <!-- 聊天内容区 -->\n      <div v-for=\"(message, index) in messages\" :key=\"index\">\n          <div :class=\"['message', message.type]\">\n              <div class=\"message-content\">\n                {{ message.content }}\n              </div>\n              <div v-if=\"message.timestamp\" class=\"message-time\">\n                {{ formatMessageTime(message.timestamp) }}\n              </div>\n          </div>\n        </div>\n        </div>\n\n    <!-- 情绪本页面 -->\n    <div v-else class=\"emotion-diary-container\">\n      <!-- 用户资料部分 -->\n      <div class=\"user-profile\">\n        <div class=\"profile-avatar\">\n          <img :src=\"personalityResult?.avatar\" alt=\"头像\">\n        </div>\n        <div class=\"profile-info\">\n          <div class=\"profile-name\">{{ personalityResult?.name }}</div>\n          <div class=\"profile-desc\">{{ personalityResult?.description }}</div>\n        </div>\n      </div>\n\n      <!-- 情绪收集信息 -->\n      <div class=\"emotion-collection\">\n        <div class=\"collection-title\">近期情绪</div>\n        <div class=\"collection-data\">\n          <div class=\"data-item\">\n            <div class=\"data-value\">{{ emotionBottles.length || 0 }}</div>\n            <div class=\"data-label\">收集总数</div>\n          </div>\n          <div class=\"data-item\">\n            <div class=\"data-value\">{{ Object.keys(emotionStats).length || 0 }}</div>\n            <div class=\"data-label\">情绪种类</div>\n          </div>\n          <div class=\"data-item\">\n            <div class=\"data-value\">{{ getMostFrequentEmotion() }}</div>\n            <div class=\"data-label\">常见情绪</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 情绪标签统计 -->\n      <div class=\"emotion-stats\">\n        <div class=\"stats-title\">情绪记录</div>\n        <div class=\"emotion-tags\">\n          <div \n            v-for=\"(count, emotion) in emotionStats\" \n            :key=\"emotion\"\n            class=\"emotion-tag\"\n            :style=\"{\n              backgroundColor: emotionColorMap[emotion]?.color + '20',\n              color: emotionColorMap[emotion]?.color\n            }\"\n          >\n            <span class=\"tag-label\">{{ emotionColorMap[emotion]?.label }}</span>\n            <span class=\"tag-count\">{{ count }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- 情绪日记列表 -->\n      <div class=\"emotion-entries\">\n        <div \n          v-for=\"entry in emotionBottles\" \n          :key=\"entry.id\"\n          class=\"emotion-entry\"\n          :class=\"{ 'new-entry': newEmotionId === entry.id }\"\n          :style=\"{\n            borderLeftColor: emotionColorMap[entry.emotion]?.color\n          }\"\n        >\n          <div class=\"emotion-label\" :style=\"{ color: emotionColorMap[entry.emotion]?.color }\">\n            {{ emotionColorMap[entry.emotion]?.label }}\n          </div>\n          <div class=\"entry-content\">{{ entry.content }}</div>\n          <div class=\"entry-time\">{{ new Date(entry.timestamp).toLocaleString() }}</div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"chat-input\">\n      <div class=\"input-wrapper\" :class=\"{ active: inputActive }\">\n        <input \n          type=\"text\" \n          v-model=\"newMessage\" \n          @keyup.enter=\"sendMessage\"\n          placeholder=\"说你想说的\" \n          :disabled=\"isThinking\"\n          style=\"padding-left: 8px;\"\n        >\n        <button \n          @click=\"sendMessage\"\n          :disabled=\"isThinking || !newMessage.trim()\"\n        >\n          <img \n            :src=\"inputActive ? sendSelectIcon : sendNormalIcon\"\n            alt=\"发送\"\n            class=\"send-icon\"\n          >\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n/* 移除蒙版和底部动态面板相关样式 */\n/* .overlay { ... } */\n/* .bottom-panel { ... } */\n/* .panel-content { ... } */\n/* .character-section { ... } */\n/* .character-avatar { ... } */\n/* .character-info { ... } */\n/* .character-name { ... } */\n/* .character-desc { ... } */\n/* .character-traits { ... } */\n/* .start-chat-button { ... } */\n\n.chat-container {\n  min-height: 100vh;\n  max-width: 430px;\n  margin: 0 auto;\n  background-color: #F8FBFF;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n  background-image: linear-gradient(to bottom, rgba(31, 234, 187, 0.05) 0px, rgba(31, 234, 187, 0) 100px);\n  background-size: 100% 100px;\n  background-position: top;\n  background-repeat: no-repeat;\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n}\n\n.chat-container::after {\n  content: '';\n  position: absolute;\n  top: 56px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: white;\n  border-radius: 20px 20px 0 0;\n  z-index: 0;\n}\n\n.chat-header {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%;\n  max-width: 430px;\n  height: 56px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: linear-gradient(to bottom, rgba(31, 234, 187, 0.02) 0%, rgba(31, 234, 187, 0) 100%);\n  z-index: 100;\n  padding: 0 16px;\n  z-index: 100;\n}\n\n.nav-left {\n  display: flex;\n  gap: 24px;\n}\n\n.nav-item {\n  font-size: 16px;\n  font-weight: 400;\n  color: rgba(17, 25, 37, 0.65);\n  position: relative;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n}\n\n.nav-item.active {\n  color: #111;\n  font-weight: 600;\n}\n\n.nav-item.active::after {\n  content: '';\n  position: absolute;\n  bottom: -8px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 24px;\n  height: 4px;\n  background: #1FEABB !important;\n  border-radius: 2px;\n}\n\n.nav-right {\n  display: flex;\n  align-items: center;\n}\n\n.new-chat-btn {\n  background: none;\n  border: none;\n  padding: 0;\n  margin-left: 8px;\n  cursor: pointer;\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background 0.2s;\n}\n\n.new-chat-btn:hover {\n  background: #F4FDFC;\n}\n\n.new-chat-btn img {\n  width: 22px;\n  height: 22px;\n  display: block;\n}\n\n.new-chat-button {\n  display: none;\n}\n\n.chat-header h1 {\n  font-size: 18px;\n  font-weight: 600;\n  color: #111;\n  margin: 0;\n  text-align: center;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding: 12px 16px 140px;\n  margin: 60px auto 0;\n  width: 100%;\n  max-width: 430px;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  z-index: 1;\n  height: calc(100vh - 128px - 72px);\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n}\n\n.scenario-selector {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  margin: 0 auto;\n  padding: 0;\n  width: fit-content;\n  background: white;\n  z-index: 999;\n  box-sizing: border-box;\n  position: static;\n}\n\n.scenario-item {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 8px;\n  padding: 0 12px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s;\n  background: #fff;\n  border: 1px solid rgba(17, 25, 37, 0.10);\n  height: 32px;\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n  justify-content: center;\n}\n\n.scenario-item .scenario-name {\n  color: #666;\n}\n\n.scenario-item.active {\n  border: 1px solid #1FEABB;\n  background: #fff;\n}\n\n.scenario-item.active .scenario-name {\n  color: #111;\n  font-weight: 500;\n}\n\n.scenario-icon {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n  background: transparent;\n  border-radius: 50%;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: transform 0.3s ease;\n}\n\n.scenario-item.active .scenario-icon {\n  animation: scaleAndRotate 0.5s ease;\n}\n\n@keyframes scaleAndRotate {\n  0% {\n    transform: scale(1) rotate(0deg);\n  }\n  25% {\n    transform: scale(1.25) rotate(5deg);\n  }\n  50% {\n    transform: scale(1) rotate(0deg);\n  }\n  75% {\n    transform: scale(1.1) rotate(3deg);\n  }\n  100% {\n    transform: scale(1) rotate(0deg);\n  }\n}\n\n.scenario-icon img {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n\n.scenario-name {\n  font-size: 13px;\n  color: #666;\n  font-weight: 400;\n  transition: color 0.2s, font-weight 0.2s;\n}\n\n.scenario-item.active .scenario-name {\n  color: #111;\n  font-weight: 500;\n}\n\n.character-card {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 16px;\n  background: white;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.avatar, .character-avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 24px;\n  overflow: hidden;\n  background: #f0f0f0;\n}\n\n.avatar img, .character-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.info {\n  flex: 1;\n}\n\n.name {\n  font-size: 16px;\n  font-weight: 600;\n  color: #111;\n  margin-bottom: 4px;\n}\n\n.traits {\n  font-size: 14px;\n  color: rgba(17, 25, 37, 0.65);\n}\n\n.message {\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n}\n\n.message.user {\n  align-items: flex-end;\n}\n\n.message.assistant {\n  align-items: flex-start;\n  margin-top: 12px;\n}\n\n.message-content {\n  max-width: 85%;\n  padding: 0;\n  border-radius: 18px;\n  font-size: 14px;\n  line-height: 1.5;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  margin: 0;\n}\n\n.message.user .message-content {\n  min-height: 44px;\n  padding: 8px 12px;\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  background-color: #ECFFFB;\n  color: #111;\n  border-bottom-right-radius: 4px;\n  white-space: pre-wrap;\n  word-break: break-word;\n}\n\n.message.assistant .message-content {\n  background: rgba(17, 17, 17, 0.03);\n  color: #666;\n  border-bottom-left-radius: 4px;\n  text-align: left;\n  padding: 8px 12px;\n  border-radius: 18px;\n  border-bottom-left-radius: 4px;\n  white-space: pre-wrap;\n  word-break: break-word;\n}\n\n.chat-input {\n  position: fixed;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%;\n  padding: 12px;\n  background: none;\n  max-width: 430px;\n  z-index: 1000;\n  box-shadow: none;\n  margin: 0;\n  box-sizing: border-box;\n}\n\n.chat-input .input-wrapper {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  position: relative;\n  background: #fff;\n  padding: 8px;\n  padding-left: 8px;\n  border-radius: 16px;\n  border: 1px solid rgba(17, 25, 36, 0.05);\n  box-shadow: 0px 2px 8px 0px rgba(17, 25, 37, 0.07), 0px 1.5px 6px 0px rgba(31, 234, 187, 0.03);\n  height: 52px;\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  transition: background 0.2s;\n}\n\n.input-wrapper.active {\n  background: #fff;\n  border: 1.5px solid #1FEABB;\n}\n\n.chat-input input {\n  flex: 1;\n  height: 40px;\n  border: none;\n  background: transparent;\n  padding: 0 12px 0 40px;\n  font-size: 15px;\n  outline: none;\n  color: #111;\n}\n\n.chat-input input::placeholder {\n  color: #999;\n}\n\n.chat-input input:disabled {\n  background-color: transparent;\n  cursor: not-allowed;\n  color: #999;\n}\n\n.chat-input button {\n  width: 28px;\n  height: 28px;\n  background-color: #1FEABB;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n}\n\n.chat-input button img {\n  width: 28px;\n  height: 28px;\n  object-fit: contain;\n}\n\n.input-wrapper.active .chat-input button img {\n  filter: none;\n  color: #111;\n}\n\n.chat-input button:active {\n  transform: scale(0.95);\n  background-color: #4CD8BF;\n}\n\n.chat-input button:disabled {\n  background-color: #FFF;\n  cursor: not-allowed;\n}\n\n.chat-container.no-scroll {\n  overflow: hidden;\n  position: fixed;\n  width: 100%;\n  max-width: 430px;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.nav-button.next {\n  background: none;\n  color: #111;\n  border: none;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  margin-right: 20px;\n}\n\n.thinking-section {\n  display: none;\n}\n\n.thinking-content,\n.thinking-content p {\n  display: none;\n}\n\n.scenario-icon-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 8px;\n}\n.scenario-icon-center img {\n  width: 80px;\n  height: 80px;\n  object-fit: contain;\n  display: block;\n}\n\n@keyframes scale-twice {\n  0%   { transform: scale(1);}\n  10%  { transform: scale(1.25);}\n  20%  { transform: scale(0.92);}\n  30%  { transform: scale(1.15);}\n  40%  { transform: scale(0.97);}\n  50%  { transform: scale(1.08);}\n  60%  { transform: scale(1);}\n  100% { transform: scale(1);}\n}\n.shake {\n  animation: scale-twice 0.6s cubic-bezier(.36,.07,.19,.97) both;\n}\n\n.chat-top-hint {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: auto 0;\n  min-height: 200px;\n  justify-content: center;\n}\n.top-hint-text {\n  color: #111;\n  font-size: 14px;\n  line-height: 1.5;\n  text-align: center;\n  width: 300px;\n  margin: 10px auto;\n  margin-bottom: 16px;\n  letter-spacing: 0.5px;\n}\n\n/* 思考过程样式 */\n.thinking-content h1,\n.thinking-content h2,\n.thinking-content h3,\n.thinking-content h4,\n.thinking-content h5 {\n  font-size: 14px;\n  font-weight: 500;\n  color: rgba(17, 17, 17, 0.65);\n  margin: 8px 0 4px 0;\n}\n.thinking-content,\n.thinking-content p {\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(17, 17, 17, 0.65);\n  margin: 0 0 4px 0;\n}\n\n/* 最终结论样式 */\n.message.assistant .message-content h1,\n.message.assistant .message-content h2,\n.message.assistant .message-content h3,\n.message.assistant .message-content h4,\n.message.assistant .message-content h5 {\n  font-size: 16px;\n  font-weight: 500;\n  color: #111;\n  margin: 8px 0 4px 0;\n}\n.message.assistant .message-content,\n.message.assistant .message-content p {\n  font-size: 14px;\n  font-weight: 400;\n  color: rgba(17, 17, 17, 0.85);\n  margin: 0 0 4px 0;\n}\n\n/* 多级序号样式 */\n.thinking-content ol,\n.message.assistant .message-content ol {\n  list-style-type: none;\n  counter-reset: section;\n  padding-left: 1.5em;\n}\n.thinking-content ol > li,\n.message.assistant .message-content ol > li {\n  counter-increment: section;\n  position: relative;\n  margin-bottom: 4px;\n}\n.thinking-content ol > li:before,\n.message.assistant .message-content ol > li:before {\n  content: counter(section, cjk-ideographic) '、';\n  position: absolute;\n  left: -1.5em;\n  color: inherit;\n}\n.thinking-content ol ol > li:before,\n.message.assistant .message-content ol ol > li:before {\n  content: counter(section) '、';\n}\n.thinking-content ol ol ol > li:before,\n.message.assistant .message-content ol ol ol > li:before {\n  content: counter(section) ')';\n}\n.thinking-content ul ul ul ul > li:before,\n.message.assistant .message-content ul ul ul ul > li:before {\n  content: '·';\n}\n\n.emotion-diary-container {\n  flex: 1;\n  overflow-y: auto;\n  padding: 72px 16px 140px;\n  margin: 0 auto;\n  width: 100%;\n  max-width: 430px;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  z-index: 1;\n  box-sizing: border-box;\n}\n\n.emotion-entries {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 16px;\n}\n\n.emotion-entry {\n  background: white;\n  border-radius: 12px;\n  padding: 16px;\n  position: relative;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  min-height: 120px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  border-left: 4px solid currentColor;\n}\n\n.emotion-entry.new-entry {\n  animation: glow 1.5s ease-in-out infinite alternate;\n}\n\n@keyframes glow {\n  from {\n    box-shadow: 0 0 5px rgba(255, 255, 255, 0.8),\n                0 0 10px rgba(255, 255, 255, 0.8),\n                0 0 15px var(--glow-color, rgba(31, 234, 187, 0.8));\n  }\n  to {\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.8),\n                0 0 20px rgba(255, 255, 255, 0.8),\n                0 0 30px var(--glow-color, rgba(31, 234, 187, 0.8));\n  }\n}\n\n.emotion-label {\n  position: absolute;\n  top: -8px;\n  left: 12px;\n  background: white;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  color: #666;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.entry-content {\n  font-size: 14px;\n  line-height: 1.5;\n  color: #333;\n  flex: 1;\n  word-break: break-all;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  margin-top: 8px;\n}\n\n.entry-time {\n  font-size: 12px;\n  color: #999;\n  text-align: right;\n  margin-top: 8px;\n}\n\n.user-profile {\n  padding: 24px 16px;\n  background: white;\n  border-radius: 16px;\n  margin: 16px;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.profile-avatar {\n  width: 64px;\n  height: 64px;\n  border-radius: 32px;\n  overflow: hidden;\n}\n\n.profile-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.profile-info {\n  flex: 1;\n}\n\n.profile-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: #111;\n  margin-bottom: 4px;\n}\n\n.profile-desc {\n  font-size: 14px;\n  color: #666;\n  line-height: 1.4;\n}\n\n.emotion-stats {\n  padding: 0 16px;\n  margin-bottom: 24px;\n}\n\n.stats-title {\n  font-size: 16px;\n  font-weight: 500;\n  color: #111;\n  margin-bottom: 12px;\n}\n\n.emotion-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.emotion-tag {\n  padding: 6px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.tag-count {\n  font-weight: 500;\n}\n\n.emotion-entries {\n  padding: 0 16px;\n}\n\n.emotion-entry {\n  background: white;\n  border-radius: 12px;\n  padding: 16px;\n  position: relative;\n  margin-bottom: 16px;\n  border-left: 4px solid;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.emotion-label {\n  font-size: 13px;\n  font-weight: 500;\n  margin-bottom: 8px;\n}\n\n.entry-content {\n  font-size: 14px;\n  line-height: 1.5;\n  color: #333;\n}\n\n.entry-time {\n  font-size: 12px;\n  color: #999;\n  margin-top: 8px;\n}\n\n.emotion-collection {\n  padding: 16px;\n  background: white;\n  border-radius: 12px;\n  margin-bottom: 24px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.collection-title {\n  font-size: 16px;\n  font-weight: 500;\n  color: #111;\n  margin-bottom: 12px;\n}\n\n.collection-data {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.data-item {\n  text-align: center;\n}\n\n.data-value {\n  font-size: 24px;\n  font-weight: 600;\n  color: #111;\n}\n\n.data-label {\n  font-size: 14px;\n  color: #666;\n}\n\n.message-time {\n  font-size: 12px;\n  color: #999;\n  margin-top: 4px;\n  padding: 0 4px;\n}\n\n.message.user .message-time {\n  text-align: right;\n}\n\n.message.assistant .message-time {\n  text-align: left;\n}\n</style>","export default \"__VITE_ASSET__b2b84e6c__\"","export default \"__VITE_ASSET__4df70953__\"","export default \"__VITE_ASSET__2253ab3f__\"","export default \"__VITE_ASSET__608c73b5__\"","<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport yqmfsAvatar from '../assets/images/yqmfs.png'\n\nconst router = useRouter()\nconst activeTab = ref('self')\n\nconst switchTab = (tab) => {\n  activeTab.value = tab\n  if (tab === 'chat') {\n    router.push('/chat')\n  }\n}\n\nconst personalityResult = ref({\n  name: '元气魔法师',\n  description: '聚会时用幽默打破沉默，拉近关系',\n  avatar: yqmfsAvatar,\n  traits: ['聚会能量', '社交魔法', '幽默化解', '亲密关系']\n})\n\n// 随机选择3个特质标签\nconst randomTraits = computed(() => {\n  const traits = [...personalityResult.value.traits]\n  const result = []\n  for (let i = 0; i < 3 && traits.length > 0; i++) {\n    const randomIndex = Math.floor(Math.random() * traits.length)\n    result.push(traits[randomIndex])\n    traits.splice(randomIndex, 1)\n  }\n  return result\n})\n\n// 情感分析结果类型\nconst EmotionType = {\n  HAPPY: 'happy',\n  SAD: 'sad',\n  ANGRY: 'angry',\n  NEUTRAL: 'neutral',\n  ANXIOUS: 'anxious',\n  EXCITED: 'excited'\n}\n\n// 情绪颜色映射\nconst emotionColorMap = {\n  [EmotionType.HAPPY]: {\n    color: '#FFD700',\n    label: '开心',\n    shadow: '0 0 15px rgba(255, 215, 0, 0.6)'\n  },\n  [EmotionType.SAD]: {\n    color: '#2196F3',\n    label: '难过',\n    shadow: '0 0 15px rgba(33, 150, 243, 0.6)'\n  },\n  [EmotionType.ANGRY]: {\n    color: '#F44336',\n    label: '生气',\n    shadow: '0 0 15px rgba(244, 67, 54, 0.6)'\n  },\n  [EmotionType.NEUTRAL]: {\n    color: '#9E9E9E',\n    label: '平静',\n    shadow: '0 0 15px rgba(158, 158, 158, 0.6)'\n  },\n  [EmotionType.ANXIOUS]: {\n    color: '#9C27B0',\n    label: '焦虑',\n    shadow: '0 0 15px rgba(156, 39, 176, 0.6)'\n  },\n  [EmotionType.EXCITED]: {\n    color: '#FF9800',\n    label: '兴奋',\n    shadow: '0 0 15px rgba(255, 152, 0, 0.6)'\n  }\n};\n\n// 情绪瓶收集\nconst emotionBottles = ref([]);\n\n// 计算情绪统计数据\nconst emotionStats = computed(() => {\n  const stats = {};\n  emotionBottles.value.forEach(entry => {\n    stats[entry.emotion] = (stats[entry.emotion] || 0) + 1;\n  });\n  return stats;\n});\n\nconst getMostFrequentEmotion = () => {\n  const stats = emotionStats.value;\n  let mostFrequent = null;\n  let maxCount = 0;\n  for (const emotion in stats) {\n    if (stats[emotion] > maxCount) {\n      mostFrequent = emotion;\n      maxCount = stats[emotion];\n    }\n  }\n  return mostFrequent ? emotionColorMap[mostFrequent]?.label || '暂无' : '暂无';\n};\n\n// 添加判断常见情绪是否为负向情绪的函数\nconst getMostFrequentEmotionType = computed(() => {\n  const stats = emotionStats.value;\n  let mostFrequent = null;\n  let maxCount = 0;\n  \n  for (const emotion in stats) {\n    if (stats[emotion] > maxCount) {\n      mostFrequent = emotion;\n      maxCount = stats[emotion];\n    }\n  }\n  \n  return mostFrequent;\n});\n\n// 判断是否为负向情绪\nconst isNegativeEmotion = computed(() => {\n  const mostFrequentEmotion = getMostFrequentEmotionType.value;\n  return mostFrequentEmotion === EmotionType.SAD || \n         mostFrequentEmotion === EmotionType.ANGRY || \n         mostFrequentEmotion === EmotionType.ANXIOUS;\n});\n\n// 判断是否为正向情绪\nconst isPositiveEmotion = computed(() => {\n  const mostFrequentEmotion = getMostFrequentEmotionType.value;\n  return mostFrequentEmotion === EmotionType.HAPPY ||\n         mostFrequentEmotion === EmotionType.EXCITED ||\n         mostFrequentEmotion === EmotionType.NEUTRAL;\n});\n\n// 正向情绪安抚文案\nconst positiveMessages = [\n  \"今天的你，像阳光一样温暖！\",\n  \"保持好心情，快乐每一天！\",\n  \"你的笑容是最美的风景～\",\n  \"继续加油，生活会越来越好！\",\n  \"幸福其实很简单，正如现在的你～\"\n];\n\n// 负向情绪安抚文案（原comfortMessages）\nconst comfortMessages = [\n  \"心情不好时，深呼吸，告诉自己：这只是暂时的～\",\n  \"每一种情绪都有它存在的意义，接纳它，然后放手～\",\n  \"愿你的心情如花般绽放，阴霾终将散去～\",\n  \"给自己一个拥抱，你比想象中更坚强～\",\n  \"今天的乌云，孕育着明天的彩虹～\"\n];\n\n// 随机获取安抚文案\nconst randomComfortMessage = computed(() => {\n  if (isPositiveEmotion.value) {\n    const index = Math.floor(Math.random() * positiveMessages.length);\n    return positiveMessages[index];\n  } else {\n    const index = Math.floor(Math.random() * comfortMessages.length);\n    return comfortMessages[index];\n  }\n});\n\n// 舒缓音乐列表\nconst calmingMusic = computed(() => {\n  if (isPositiveEmotion.value) {\n    return [\n      { name: \"猪猪侠\", url: \"https://music.163.com/song/media/outer/url?id=34324641.mp3\" }\n    ];\n  } else {\n    return [\n      { name: \"篝火\", url: \"https://music.163.com/song/media/outer/url?id=1497056948.mp3\" }\n    ];\n  }\n});\n\n// 选中的音乐\nconst selectedMusic = ref(null);\n// 选中的音乐索引\nconst selectedMusicIndex = ref(0);\n\n// 音频播放器引用\nconst audioPlayer = ref(null);\n// 新增播放状态变量\nconst isPlaying = ref(false);\n\n// 选择音乐\nconst selectMusic = () => {\n  selectedMusic.value = calmingMusic.value[selectedMusicIndex.value];\n  if (audioPlayer.value) {\n    audioPlayer.value.src = selectedMusic.value.url;\n    audioPlayer.value.play().then(() => {\n      isPlaying.value = true;\n    }).catch(error => {\n      isPlaying.value = false;\n      console.error('音频播放失败:', error);\n    });\n  }\n};\n\n// 播放/暂停当前音乐\nconst toggleCurrentMusic = () => {\n  if (!selectedMusic.value) {\n    selectedMusic.value = calmingMusic.value[selectedMusicIndex.value];\n  }\n  if (audioPlayer.value) {\n    if (audioPlayer.value.paused) {\n      audioPlayer.value.src = selectedMusic.value.url;\n      audioPlayer.value.play().then(() => {\n        isPlaying.value = true;\n      }).catch(error => {\n        isPlaying.value = false;\n        console.error('音频播放失败:', error);\n      });\n    } else {\n      audioPlayer.value.pause();\n      isPlaying.value = false;\n    }\n  }\n};\n\n// 播放/暂停音乐（旧方法，保留向后兼容）\nconst toggleMusic = (music) => {\n  if (selectedMusic.value === music && audioPlayer.value && !audioPlayer.value.paused) {\n    audioPlayer.value.pause();\n    selectedMusic.value = null;\n  } else {\n    selectedMusic.value = music;\n    selectedMusicIndex.value = calmingMusic.value.findIndex(m => m.name === music.name);\n    if (audioPlayer.value) {\n      audioPlayer.value.src = music.url;\n      audioPlayer.value.play().catch(error => {\n        console.error('音频播放失败:', error);\n      });\n    }\n  }\n};\n\n// 添加音量控制\nconst volume = ref(80);\n\n// 更新音量\nconst updateVolume = () => {\n  if (audioPlayer.value) {\n    audioPlayer.value.volume = volume.value / 100;\n  }\n};\n\n// 星星动效相关\nconst stars = ref([])\n\nfunction createStar() {\n  const left = Math.random() * 100 // 百分比\n  const duration = 1.5 + Math.random() * 1.5 // 1.5~3s\n  const size = 18 + Math.random() * 10 // px\n  const rotate = Math.random() * 360\n  const id = Date.now() + Math.random()\n  const symbol = Math.random() < 0.5 ? '✨' : '🌟'\n  stars.value.push({ left, duration, size, rotate, id, symbol })\n}\n\nfunction startStarAnimation() {\n  let interval = 180 // 初始间隔，较慢\n  let count = 0\n  const maxCount = 40\n  function drop() {\n    if (count >= maxCount) return\n    createStar()\n    count++\n    // 逐渐变快\n    interval = Math.max(20, interval - 4)\n    setTimeout(drop, interval)\n  }\n  drop()\n  // 3.5秒后清理所有星星\n  setTimeout(() => { stars.value = [] }, 3500)\n}\n\nonMounted(() => {\n  // 从localStorage获取用户答案\n  const answers = JSON.parse(localStorage.getItem('onboardingAnswers') || '{}')\n  if (Object.keys(answers).length > 0) {\n    const answerKey = Object.values(answers).join('')\n    const result = personalityMap[answerKey]\n    if (result) {\n      personalityResult.value = {\n        ...result,\n        traits: generateTraits(answers)\n      }\n    }\n  }\n  \n  // 从localStorage获取情绪瓶数据\n  const savedEmotionBottles = localStorage.getItem('emotionBottles') || '[\"happy\"]'\n  \n  if (savedEmotionBottles) {\n    emotionBottles.value = JSON.parse(savedEmotionBottles)\n  }\n  \n  // 初始化音量和默认选中音乐\n  if (audioPlayer.value) {\n    audioPlayer.value.volume = volume.value / 100;\n    audioPlayer.value.addEventListener('play', () => { isPlaying.value = true; });\n    audioPlayer.value.addEventListener('pause', () => { isPlaying.value = false; });\n    audioPlayer.value.addEventListener('ended', () => { isPlaying.value = false; });\n  }\n  \n  // 默认选择第一首音乐\n  selectedMusic.value = calmingMusic.value[selectedMusicIndex.value];\n  startStarAnimation()\n})\n\n// 防止 personalityMap 未定义报错\nconst personalityMap = {}\n\n// 添加底部面板控制变量\nconst showBottomPanel = ref(false);\nconst panelType = ref('stats'); // 'stats' 或 'entries'\n\n// 打开底部面板\nconst openBottomPanel = (type) => {\n  panelType.value = type;\n  showBottomPanel.value = true;\n};\n\n// 关闭底部面板\nconst closeBottomPanel = () => {\n  showBottomPanel.value = false;\n};\n</script>\n\n<template>\n  <div class=\"self-container\">\n    <!-- 星星动效层 -->\n    <div class=\"star-fall-layer\">\n      <span\n        v-for=\"star in stars\"\n        :key=\"star.id\"\n        class=\"falling-star\"\n        :style=\"{\n          left: star.left + '%',\n          fontSize: star.size + 'px',\n          animationDuration: star.duration + 's',\n          transform: `rotate(${star.rotate}deg)`\n        }\"\n      >{{ star.symbol }}</span>\n    </div>\n    <div class=\"chat-header\">\n      <div class=\"nav-left\">\n        <div \n          class=\"nav-item\" \n          :class=\"{ active: activeTab === 'chat' }\"\n          @click=\"switchTab('chat')\"\n        >说说</div>\n        <div \n          class=\"nav-item\" \n          :class=\"{ active: activeTab === 'self' }\"\n          @click=\"switchTab('self')\"\n        >情绪瓶</div>\n      </div>\n    </div>\n    \n    <div class=\"self-content\">\n      <div class=\"user-profile\">\n        <div class=\"avatar\">\n          <img :src=\"personalityResult.avatar\" alt=\"用户头像\">\n        </div>\n        <div class=\"info\">\n          <div class=\"name\">{{ personalityResult.name }}</div>\n          <div class=\"traits\">\n            <span v-for=\"trait in randomTraits\" :key=\"trait\" class=\"trait-tag\">\n              {{ trait }}\n            </span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 情绪收集信息 -->\n      <div class=\"emotion-collection\">\n        <div class=\"collection-header\">\n          <img src=\"../assets/images/bottle.png\" alt=\"情绪瓶\" class=\"bottle-image\">\n        </div>\n      </div>\n      <!-- @click=\"openBottomPanel('entries')\"  @click=\"openBottomPanel('stats')\"  @click=\"openBottomPanel('stats')\"-->\n      <!-- 负面情绪安抚组件 -->\n      <div v-if=\"emotionBottles.length > 0\"\n           class=\"comfort-section\">\n        <div class=\"collection-data-container\">\n          <div class=\"card-item\">\n            <div class=\"card-icon-label-row\">\n              <div class=\"card-icon\">📝</div>\n              <div class=\"card-label\">收集总数</div>\n            </div>\n            <div class=\"card-value\">{{ emotionBottles.length || 0 }}</div>\n          </div>\n          <div class=\"card-item\">\n            <div class=\"card-icon-label-row\">\n              <div class=\"card-icon\">🌈</div>\n              <div class=\"card-label\">情绪种类</div>\n            </div>\n            <div class=\"card-value\">{{ Object.keys(emotionStats).length || 0 }}</div>\n          </div>\n          <div class=\"card-item\">\n            <div class=\"card-icon-label-row\">\n              <div class=\"card-icon\">⭐</div>\n              <div class=\"card-label\">常见情绪</div>\n            </div>\n            <div class=\"card-value\"\n                 :class=\"{ 'emotion-angry': getMostFrequentEmotionType === EmotionType.ANGRY }\">\n              {{ getMostFrequentEmotion() }}\n            </div>\n          </div>\n        </div>\n        <div class=\"comfort-message\">\n          <div class=\"message-divider\"></div>\n          <div class=\"message-text\">{{ randomComfortMessage }}</div>\n        </div>\n        <div class=\"music-section\">\n          <!-- 当前播放信息 -->\n          <div class=\"player-container\">\n            <div class=\"now-playing\">\n              <div class=\"player-content\">\n                <div class=\"cd-container\" :class=\"{ 'rotating': isPlaying }\">\n                  <img src=\"../assets/images/cd.webp\" alt=\"CD\" class=\"cd-image\">\n                </div>\n                <div class=\"player-info\">\n                  <div class=\"player-title\">\n                    <span>{{ selectedMusic ? selectedMusic.name : '篝火' }}</span>\n                  </div>\n                  <div class=\"player-controls\">\n                    <input \n                      type=\"range\" \n                      min=\"0\" \n                      max=\"100\" \n                      v-model=\"volume\" \n                      @input=\"updateVolume\" \n                      class=\"volume-slider\"\n                    >\n                    <button class=\"control-button\" @click=\"toggleCurrentMusic\">\n                      <span v-if=\"audioPlayer && !audioPlayer.paused\">⏸️</span>\n                      <span v-else>▶️</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- 音频播放器 -->\n        <audio ref=\"audioPlayer\" loop></audio>\n      </div>\n    </div>\n\n    <!-- 底部动态面板 -->\n    <div class=\"bottom-panel-container\" v-if=\"showBottomPanel\">\n      <div class=\"panel-overlay\" @click=\"closeBottomPanel\"></div>\n      <div class=\"bottom-panel\">\n        <div class=\"panel-header\">\n          <div class=\"panel-title\">{{ panelType === 'stats' ? '情绪统计' : '情绪记录' }}</div>\n          <div class=\"close-button\" @click=\"closeBottomPanel\">×</div>\n        </div>\n        \n        <!-- 情绪标签统计 -->\n        <div class=\"panel-content\" v-if=\"panelType === 'stats' && Object.keys(emotionStats).length > 0\">\n          <div class=\"emotion-tags\">\n            <div \n              v-for=\"(count, emotion) in emotionStats\" \n              :key=\"emotion\"\n              class=\"emotion-tag\"\n              :style=\"{\n                backgroundColor: emotionColorMap[emotion]?.color + '20',\n                color: emotionColorMap[emotion]?.color\n              }\"\n            >\n              <span class=\"tag-label\">{{ emotionColorMap[emotion]?.label }}</span>\n              <span class=\"tag-count\">{{ count }}</span>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 情绪日记列表 -->\n        <div class=\"panel-content\" v-if=\"panelType === 'entries' && emotionBottles.length > 0\">\n          <div \n            v-for=\"entry in emotionBottles\" \n            :key=\"entry.id\"\n            class=\"emotion-entry\"\n            :style=\"{\n              borderLeftColor: emotionColorMap[entry.emotion]?.color\n            }\"\n          >\n            <div class=\"emotion-label\" :style=\"{ color: emotionColorMap[entry.emotion]?.color }\">\n              {{ emotionColorMap[entry.emotion]?.label }}\n            </div>\n            <div class=\"entry-content\">{{ entry.content }}</div>\n            <div class=\"entry-time\">{{ new Date(entry.timestamp).toLocaleString() }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.self-container {\n  min-height: 100vh;\n  max-width: 430px;\n  margin: 0 auto;\n  background-color: #F8FBFF;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n  background-image: linear-gradient(to bottom, rgba(31, 234, 187, 0.05) 0px, rgba(31, 234, 187, 0) 100px);\n  background-size: 100% 100px;\n  background-position: top;\n  background-repeat: no-repeat;\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n}\n\n.self-container::after {\n  content: '';\n  position: absolute;\n  top: 56px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: white;\n  border-radius: 20px 20px 0 0;\n  z-index: 0;\n}\n\n.chat-header {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%;\n  max-width: 430px;\n  height: 56px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: linear-gradient(to bottom, rgba(31, 234, 187, 0.02) 0%, rgba(31, 234, 187, 0) 100%);\n  z-index: 100;\n  padding: 0 16px;\n  z-index: 100;\n}\n\n.nav-left {\n  display: flex;\n  gap: 24px;\n}\n\n.nav-item {\n  font-size: 16px;\n  font-weight: 400;\n  color: rgba(17, 25, 37, 0.65);\n  position: relative;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n}\n\n.nav-item.active {\n  color: #111;\n  font-weight: 600;\n}\n\n.nav-item.active::after {\n  content: '';\n  position: absolute;\n  bottom: -8px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 24px;\n  height: 4px;\n  background: #1FEABB !important;\n  border-radius: 2px;\n}\n\n.self-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  margin-top: 56px;\n  position: relative;\n  z-index: 1;\n}\n\n.user-profile {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 0;\n  margin-bottom: 24px;\n  background: transparent;\n  border-radius: 0;\n  box-shadow: none;\n}\n\n.avatar {\n  width: 48px;\n  height: 48px;\n  border-radius: 24px;\n  overflow: hidden;\n  background: #f0f0f0;\n}\n\n.avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.info {\n  flex: 1;\n}\n\n.name {\n  font-size: 16px;\n  font-weight: 600;\n  color: #111;\n  margin-bottom: 8px;\n}\n\n.traits {\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 8px;\n  overflow: hidden;\n}\n\n.trait-tag {\n  font-size: 12px;\n  color: #666;\n  background: rgba(17, 17, 17, 0.03);\n  padding: 0 8px;\n  height: 24px;\n  line-height: 24px;\n  border-radius: 8px;\n  white-space: nowrap;\n}\n\n.emotion-collection {\n  padding: 0;\n  background: transparent;\n  border-radius: 0;\n  box-shadow: none;\n  margin-bottom: 24px;\n}\n\n.collection-header {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-bottom: 12px;\n}\n\n.collection-title {\n  font-size: 16px;\n  font-weight: 500;\n  color: #111;\n}\n\n.bottle-image {\n  width: 200px;\n  height: 200px;\n  object-fit: contain;\n  display: block;\n  margin: 0 auto;\n}\n\n.collection-data-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  gap: 12px;\n}\n\n.card-item {\n  text-align: center;\n  border-radius: 16px;\n  padding: 6px 12px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.card-item:active {\n  transform: scale(0.98);\n}\n\n.card-icon-label-row {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  margin-bottom: 4px;\n}\n\n.card-icon {\n  font-size: 14px;\n  margin-bottom: 0;\n}\n\n.card-label {\n  font-size: 13px;\n  color: rgba(17, 17, 17, 0.45);\n  margin-bottom: 0;\n}\n\n.card-value {\n  font-size: 20px;\n  font-weight: 600;\n  color: #111;\n}\n\n.emotion-stats {\n  padding: 16px;\n  background: white;\n  border-radius: 16px;\n  margin-bottom: 24px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.stats-title {\n  font-size: 16px;\n  font-weight: 500;\n  color: #111;\n  margin-bottom: 12px;\n}\n\n.emotion-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.emotion-tag {\n  padding: 6px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.tag-count {\n  font-weight: 500;\n}\n\n.emotion-entries {\n  margin-top: 16px;\n}\n\n.emotion-entry {\n  background: white;\n  border-radius: 16px;\n  padding: 16px;\n  position: relative;\n  margin-bottom: 16px;\n  border-left: 4px solid;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.emotion-label {\n  position: absolute;\n  top: -8px;\n  left: 12px;\n  background: white;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.entry-content {\n  font-size: 14px;\n  line-height: 1.5;\n  color: #333;\n  margin-top: 8px;\n}\n\n.entry-time {\n  font-size: 12px;\n  color: #999;\n  margin-top: 8px;\n  text-align: right;\n}\n\n.comfort-section {\n  padding: 16px;\n  background: linear-gradient(to bottom, rgba(33, 150, 243, 0.1), rgba(33, 150, 243, 0.03));\n  border-radius: 16px;\n  margin-top: 16px;\n}\n\n.comfort-message {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 0 8px;\n}\n\n.message-divider {\n  width: 100%;\n  height: 1px;\n  background: rgba(17, 17, 17, 0.03);\n  margin-top: 10px;\n  margin-bottom: 20px;\n}\n\n.message-text {\n  font-size: 14px;\n  color: rgba(17, 17, 17, 0.65);\n  line-height: 1.5;\n  text-align: center;\n  width: 100%;\n}\n\n.music-section {\n  margin-top: 0;\n}\n\n.section-title {\n  font-size: 16px;\n  font-weight: 500;\n  color: #111;\n  margin-bottom: 12px;\n}\n\n.music-section {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n}\n\n.music-item {\n  cursor: pointer;\n  background: #F8FBFF;\n  border-radius: 12px;\n  padding: 12px 16px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex: 1;\n  min-width: calc(50% - 12px);\n  transition: all 0.3s ease;\n  border: 1px solid rgba(31, 234, 187, 0.1);\n}\n\n.music-item.active {\n  background: rgba(31, 234, 187, 0.1);\n  border: 1px solid #1FEABB;\n}\n\n.music-icon {\n  font-size: 20px;\n  color: #1FEABB;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  background: white;\n  border-radius: 50%;\n  box-shadow: 0 2px 6px rgba(31, 234, 187, 0.2);\n}\n\n.icon.playing {\n  animation: pulse 1.5s infinite;\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n.music-name {\n  font-size: 14px;\n  color: #333;\n  font-weight: 500;\n}\n\n.player-container {\n  margin-top: 0;\n  padding: 12px 16px;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  width: 100%;\n}\n\n.now-playing {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.player-title {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 0;\n}\n\n.player-controls {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: -2px;\n}\n\n.control-button {\n  background: white;\n  border: none;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 18px;\n  transition: all 0.2s ease;\n  outline: none;\n}\n\n.control-button:focus {\n  outline: none !important;\n  box-shadow: none !important;\n}\n\n.control-button:focus-visible {\n  outline: none !important;\n  box-shadow: none !important;\n}\n\n.control-button:active {\n  outline: none !important;\n  box-shadow: none !important;\n}\n\n.prev-button, .next-button {\n  font-size: 14px;\n  width: 32px;\n  height: 32px;\n}\n\n.volume-slider {\n  -webkit-appearance: none;\n  appearance: none;\n  flex: 1;\n  height: 4px;\n  border-radius: 2px;\n  background: linear-gradient(to right, #2196F3, rgba(33, 150, 243, 0.3));\n  outline: none;\n}\n\n.volume-slider::-webkit-slider-thumb {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: white;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.volume-slider::-moz-range-thumb {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: white;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  border: none;\n}\n\n.player-content {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.cd-container {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 2px solid rgba(33, 150, 243, 0.2);\n  flex-shrink: 0;\n}\n\n.cd-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n}\n\n.player-info {\n  flex: 1;\n}\n\n.player-title {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 0;\n}\n\n.rotating {\n  animation: rotate 8s linear infinite;\n}\n\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.bottom-panel-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease;\n}\n\n.panel-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  animation: fadeIn 0.3s ease;\n}\n\n.bottom-panel {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: white;\n  border-radius: 20px 20px 0 0;\n  padding: 20px 20px calc(20px + env(safe-area-inset-bottom, 0px));\n  z-index: 1001;\n  max-height: 80vh;\n  overflow-y: auto;\n  animation: slideUp 0.3s ease;\n  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.1);\n}\n\n.panel-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.panel-title {\n  font-size: 18px;\n  font-weight: 500;\n  color: #111;\n}\n\n.close-button {\n  font-size: 24px;\n  color: #999;\n  cursor: pointer;\n}\n\n.panel-content {\n  margin-top: 20px;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes slideUp {\n  from {\n    transform: translateY(100%);\n  }\n  to {\n    transform: translateY(0);\n  }\n}\n\n.emotion-angry {\n  font-size: 18px !important;\n}\n\n.star-fall-layer {\n  pointer-events: none;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 9999;\n  overflow: hidden;\n}\n.falling-star {\n  position: absolute;\n  top: -30px;\n  animation: star-fall linear forwards;\n  opacity: 0.85;\n  filter: drop-shadow(0 2px 6px #fff6);\n}\n@keyframes star-fall {\n  0% {\n    top: -30px;\n    opacity: 1;\n  }\n  80% {\n    opacity: 1;\n  }\n  100% {\n    /* 停在情绪瓶底部，约320px（瓶200+上方margin等120） */\n    top: 320px;\n    opacity: 0;\n  }\n}\n</style> ","export default \"__VITE_ASSET__31deeeba__\"","export default \"__VITE_ASSET__f29874ca__\"","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport { createPinia } from 'pinia'\nimport './assets/styles/main.scss'\n\nconst app = createApp(App)\nconst pinia = createPinia()\n\napp.use(router)\napp.use(pinia)\napp.mount('#app') "],"names":["router","useRouter","currentStep","ref","selectedAnswers","randomNumber","shapes","showPersonalityModal","onMounted","value","Math","floor","random","shapeTypes","grid","Array","fill","i","questions","title","options","label","multiple","personalityResult","computed","answers","personalities","name","traits","class","firstAnswer","lastAnswer","charCodeAt","length","personalityClass","_a","canProceed","currentQuestion","answer","prevStep","handleNextStep","startChat","closeModal","localStorage","setItem","JSON","stringify","push","index","indexOf","splice","setTimeout","decodeCache","decode","string","exclude","defaultChars","cache","ch","String","fromCharCode","toString","toUpperCase","slice","getDecodeCache","replace","seq","result","l","b1","parseInt","b2","chr","b3","b4","componentChars","encodeCache","encode","keepEscaped","test","getEncodeCache","code","nextCode","encodeURIComponent","format","url","protocol","slashes","auth","hostname","port","pathname","search","hash","Url","this","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","urlParse","slashesDenoteHost","u","parse","prototype","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","Any","Cc","P","regex","Z","htmlDecodeTree","Uint16Array","map","c","xmlDecodeTree","decodeMap","Map","fromCodePoint","codePoint","output","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","constructor","decodeTree","emitCodePoint","errors","state","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","write","str","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","start","end","base","digitCount","pow","startIdx","char","UPPER_F","LOWER_F","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","get","replaceCodePoint","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","lastIndex","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecoder","decodeHTML","mode","Legacy","isString","obj","_class","Object","call","_hasOwnProperty","hasOwnProperty","assign","arguments","forEach","source","TypeError","keys","key","arrayReplaceAt","src","pos","newElements","isValidEntityCode","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","unescapeAll","escaped","entity","decoded","replaceEntityPattern","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","isSpace","isWhiteSpace","isPunctChar","ucmicro.P","ucmicro.S","isMdAsciiPunct","normalizeReference","lib","mdurl","ucmicro","object","ok","level","disableNested","found","marker","prevPos","posMax","oldPos","md","inline","skipToken","labelEnd","prev_state","can_continue","default_rules","Renderer","rules","Ruler","__rules__","__cache__","Token","type","tag","nesting","attrs","children","content","markup","info","meta","block","hidden","StateCore","env","tokens","inlineMode","code_inline","idx","slf","token","renderAttrs","code_block","fence","highlighted","langName","langAttrs","arr","highlight","attrIndex","tmpAttrs","langPrefix","tmpToken","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","needLf","nextToken","renderInline","render","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","opt","Error","before","beforeName","ruleName","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","attrPush","attrData","attrSet","attrGet","attrJoin","NEWLINES_RE","NULL_RE","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","stack","thisLevel","OUTER","t","canOpen","canClose","isSingle","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","item","single","openQuote","closeQuote","quotes","_rules","tok","blockTokens","linkify","pretest","htmlLinkLevel","currentToken","links","nodes","lastPos","ln","fullUrl","normalizeLink","validateLink","urlText","schema","normalizeLinkText","token_o","token_t","token_c","blkIdx","typographer","curr","last","Core","ruler","StateBlock","bMarks","eMarks","tShift","sCount","bsCount","blkIndent","line","lineMax","tight","ddIndent","listIndent","parentType","s","indent","indent_found","process","State","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","keepLastLF","queue","lineIndent","lineStart","first","getLine","escapedSplit","isEscaped","substring","skipBulletListMarker","startLine","skipOrderedListMarker","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","shift","pop","columnCount","oldParentType","terminatorRules","tableLines","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tdo","mem","params","haveEndMarker","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","spaceAfterMarker","adjustTab","initial","oldIndent","lines","tokenize","cnt","isOrdered","markerValue","posAfterMarker","isTerminatingParagraph","Number","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","markTightParagraphs","_endLine","getNextLine","isContinuation","lineContent","destRes","helpers","parseLinkDestination","href","destEndPos","destEndLineNo","titleRes","parseLinkTitle","references","html","tmp","token_i","ParserBlock","StateInline","outTokens","tokens_meta","pending","pendingLevel","delimiters","_prev_delimiters","backticks","backticksScanned","linkLevel","isTerminatorChar","maxNesting","hasEmptyLines","prevLine","pushPending","token_meta","scanDelims","canSplitWord","count","left_flanking","right_flanking","can_open","can_close","SCHEME_RE","ESCAPED","postProcess","loneMarkers","startDelim","endDelim","r_strikethrough","scanned","open","close","postProcess$1","isStrong","r_emphasis","EMAIL_RE","AUTOLINK_RE","DIGITAL_RE","NAMED_RE","processDelimiters","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","link","matchAtStart","pmax","ws","ch1","escapedStr","ch2","origStr","openerLength","matchStart","matchEnd","closerLength","res","parseReference","labelStart","parseLinkLabel","lc","isLetter","_rules2","ParserInline","ruler2","isFunction","escapeRE","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","re","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","opts","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_xn","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","reFactory","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","isRegExp","createValidator","normalize","alias","slist","filter","schema_test","schema_search","schema_at_start","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","reduce","acc","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","maxInt","regexPunycode","regexNonASCII","regexSeparators","overflow","stringFromCharCode","error","RangeError","mapDomain","domain","callback","parts","encoded","array","ucs2decode","counter","extra","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","punycode","config","default","components","core","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","mdurl.parse","er","mdurl.encode","mdurl.format","mdurl.decode","MarkdownIt","presetName","utils.isString","ParserCore","renderer","utils","utils.assign","configure","assign$1","presets","missed","use","plugin","args","apply","parseInline","yqmfsAvatar","routes","path","redirect","component","Onboarding","activeTab","selectedScenario","scenarios","id","icon","switchTab","tab","messages","newMessage","messagesContainer","showPanel","isThinking","description","avatar","userAnswers","traitWeights","factors","traitHistory","generateTraits","traitScores","trait","weight","factor","question","calculateTraitWeight","topTraits","entries","a","b","timestamp","Date","toISOString","scores","watch","newAnswers","currentTraits","newTraits","addedTraits","includes","removedTraits","updateTraits","deep","scrollToBottom","async","nextTick","scrollTop","scrollHeight","thinkingMessage","find","inputActive","EmotionType","HAPPY","EXCITED","LOVE","GRATEFUL","PEACEFUL","HOPEFUL","SAD","ANGRY","ANXIOUS","SHAME","FEAR","DISGUST","NEUTRAL","scenarioKeywords","conflict","progress","pet","work","study","entertainment","emotionColorMap","color","shadow","analyzeEmotion","textLower","detectedScenario","matchedKeywords","some","keyword","words","word","emotion","intensity","scenario","keywords","isPositive","lastEmotion","lastScenario","emotionHistory","scenarioHistory","userInputCount","lastResponse","sendMessage","messageContent","message","userMessageHistory","saveUserMessageHistory","Promise","resolve","response","isGibberish","analysis","empathyPhrases","comfortPhrases","_b","generateResponse","addEmotionBottle","getItem","hasShownPanel","answerKey","values","personalityMap","savedEmotionBottles","emotionBottles","savedUserHistory","savedMessages","newScenario","scenarioIconRef","classList","remove","offsetWidth","hasUserMessage","newEmotionId","newBottle","now","emotionStats","stats","entry","getMostFrequentEmotion","mostFrequent","maxCount","charCounts","chineseRegex","chinesePercent","repeatedPatterns","formatMessageTime","messageDate","getDate","getMonth","getFullYear","toLocaleTimeString","hour","minute","toLocaleDateString","year","month","day","newVal","randomTraits","randomIndex","EmotionType_HAPPY","EmotionType_SAD","EmotionType_ANGRY","EmotionType_NEUTRAL","EmotionType_ANXIOUS","EmotionType_EXCITED","getMostFrequentEmotionType","mostFrequentEmotion","isPositiveEmotion","positiveMessages","comfortMessages","randomComfortMessage","calmingMusic","selectedMusic","selectedMusicIndex","audioPlayer","isPlaying","toggleCurrentMusic","paused","play","then","catch","pause","volume","updateVolume","stars","startStarAnimation","interval","drop","left","duration","size","rotate","symbol","createStar","addEventListener","showBottomPanel","panelType","closeBottomPanel","createRouter","history","createWebHashHistory","app","createApp","App","pinia","createPinia","mount"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68]}